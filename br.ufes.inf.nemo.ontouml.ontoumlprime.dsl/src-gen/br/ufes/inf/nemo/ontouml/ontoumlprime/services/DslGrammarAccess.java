/*
 * generated by Xtext
 */
package br.ufes.inf.nemo.ontouml.ontoumlprime.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementsPackageableElementParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		
		//Model:
		//	{Model} elements+=PackageableElement*;
		@Override public ParserRule getRule() { return rule; }

		//{Model} elements+=PackageableElement*
		public Group getGroup() { return cGroup; }

		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }

		//elements+=PackageableElement*
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }

		//PackageableElement
		public RuleCall getElementsPackageableElementParserRuleCall_1_0() { return cElementsPackageableElementParserRuleCall_1_0; }
	}

	public class PackageableElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageableElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGeneralizationSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPrimitiveDataTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cComplexDataTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEnumerationParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMeronymicRelationParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cKindParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cQuantityUniversalParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cCollectiveUniversalParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cSubKindParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cRoleParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cPhaseParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cCategoryParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cMixinParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cRoleMixinParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cRelatorUniversalParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cBinaryMaterialRelationParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cBinaryFormalRelationParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cModeUniversalParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cQualityUniversalParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cNAryMaterialRelationParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cNAryFormalRelationParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		
		//PackageableElement:
		//	Package | GeneralizationSet | PrimitiveDataType | ComplexDataType | Enumeration | MeronymicRelation | Kind |
		//	QuantityUniversal | CollectiveUniversal | SubKind | Role | Phase | Category | Mixin | RoleMixin | RelatorUniversal |
		//	BinaryMaterialRelation | BinaryFormalRelation | ModeUniversal | QualityUniversal | nAryMaterialRelation |
		//	nAryFormalRelation;
		@Override public ParserRule getRule() { return rule; }

		//Package | GeneralizationSet | PrimitiveDataType | ComplexDataType | Enumeration | MeronymicRelation | Kind |
		//QuantityUniversal | CollectiveUniversal | SubKind | Role | Phase | Category | Mixin | RoleMixin | RelatorUniversal |
		//BinaryMaterialRelation | BinaryFormalRelation | ModeUniversal | QualityUniversal | nAryMaterialRelation |
		//nAryFormalRelation
		public Alternatives getAlternatives() { return cAlternatives; }

		//Package
		public RuleCall getPackageParserRuleCall_0() { return cPackageParserRuleCall_0; }

		//GeneralizationSet
		public RuleCall getGeneralizationSetParserRuleCall_1() { return cGeneralizationSetParserRuleCall_1; }

		//PrimitiveDataType
		public RuleCall getPrimitiveDataTypeParserRuleCall_2() { return cPrimitiveDataTypeParserRuleCall_2; }

		//ComplexDataType
		public RuleCall getComplexDataTypeParserRuleCall_3() { return cComplexDataTypeParserRuleCall_3; }

		//Enumeration
		public RuleCall getEnumerationParserRuleCall_4() { return cEnumerationParserRuleCall_4; }

		//MeronymicRelation
		public RuleCall getMeronymicRelationParserRuleCall_5() { return cMeronymicRelationParserRuleCall_5; }

		//Kind
		public RuleCall getKindParserRuleCall_6() { return cKindParserRuleCall_6; }

		//QuantityUniversal
		public RuleCall getQuantityUniversalParserRuleCall_7() { return cQuantityUniversalParserRuleCall_7; }

		//CollectiveUniversal
		public RuleCall getCollectiveUniversalParserRuleCall_8() { return cCollectiveUniversalParserRuleCall_8; }

		//SubKind
		public RuleCall getSubKindParserRuleCall_9() { return cSubKindParserRuleCall_9; }

		//Role
		public RuleCall getRoleParserRuleCall_10() { return cRoleParserRuleCall_10; }

		//Phase
		public RuleCall getPhaseParserRuleCall_11() { return cPhaseParserRuleCall_11; }

		//Category
		public RuleCall getCategoryParserRuleCall_12() { return cCategoryParserRuleCall_12; }

		//Mixin
		public RuleCall getMixinParserRuleCall_13() { return cMixinParserRuleCall_13; }

		//RoleMixin
		public RuleCall getRoleMixinParserRuleCall_14() { return cRoleMixinParserRuleCall_14; }

		//RelatorUniversal
		public RuleCall getRelatorUniversalParserRuleCall_15() { return cRelatorUniversalParserRuleCall_15; }

		//BinaryMaterialRelation
		public RuleCall getBinaryMaterialRelationParserRuleCall_16() { return cBinaryMaterialRelationParserRuleCall_16; }

		//BinaryFormalRelation
		public RuleCall getBinaryFormalRelationParserRuleCall_17() { return cBinaryFormalRelationParserRuleCall_17; }

		//ModeUniversal
		public RuleCall getModeUniversalParserRuleCall_18() { return cModeUniversalParserRuleCall_18; }

		//QualityUniversal
		public RuleCall getQualityUniversalParserRuleCall_19() { return cQualityUniversalParserRuleCall_19; }

		//nAryMaterialRelation
		public RuleCall getNAryMaterialRelationParserRuleCall_20() { return cNAryMaterialRelationParserRuleCall_20; }

		//nAryFormalRelation
		public RuleCall getNAryFormalRelationParserRuleCall_21() { return cNAryFormalRelationParserRuleCall_21; }
	}

	public class EndurantUniversalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EndurantUniversal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cModeUniversalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQualityUniversalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRelatorUniversalParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPhaseParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRoleParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSubKindParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cKindParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cCollectiveUniversalParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cQuantityUniversalParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//EndurantUniversal:
		//	ModeUniversal | QualityUniversal | RelatorUniversal | Phase | Role | SubKind | Kind | CollectiveUniversal |
		//	QuantityUniversal;
		@Override public ParserRule getRule() { return rule; }

		//ModeUniversal | QualityUniversal | RelatorUniversal | Phase | Role | SubKind | Kind | CollectiveUniversal |
		//QuantityUniversal
		public Alternatives getAlternatives() { return cAlternatives; }

		//ModeUniversal
		public RuleCall getModeUniversalParserRuleCall_0() { return cModeUniversalParserRuleCall_0; }

		//QualityUniversal
		public RuleCall getQualityUniversalParserRuleCall_1() { return cQualityUniversalParserRuleCall_1; }

		//RelatorUniversal
		public RuleCall getRelatorUniversalParserRuleCall_2() { return cRelatorUniversalParserRuleCall_2; }

		//Phase
		public RuleCall getPhaseParserRuleCall_3() { return cPhaseParserRuleCall_3; }

		//Role
		public RuleCall getRoleParserRuleCall_4() { return cRoleParserRuleCall_4; }

		//SubKind
		public RuleCall getSubKindParserRuleCall_5() { return cSubKindParserRuleCall_5; }

		//Kind
		public RuleCall getKindParserRuleCall_6() { return cKindParserRuleCall_6; }

		//CollectiveUniversal
		public RuleCall getCollectiveUniversalParserRuleCall_7() { return cCollectiveUniversalParserRuleCall_7; }

		//QuantityUniversal
		public RuleCall getQuantityUniversalParserRuleCall_8() { return cQuantityUniversalParserRuleCall_8; }
	}

	public class UniversalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Universal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cKindParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQuantityUniversalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCollectiveUniversalParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSubKindParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRoleParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPhaseParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCategoryParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cMixinParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cRoleMixinParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cRelatorUniversalParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cModeUniversalParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cQualityUniversalParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		
		//Universal:
		//	Kind | QuantityUniversal | CollectiveUniversal | SubKind | Role | Phase | Category | Mixin | RoleMixin |
		//	RelatorUniversal | ModeUniversal | QualityUniversal;
		@Override public ParserRule getRule() { return rule; }

		//Kind | QuantityUniversal | CollectiveUniversal | SubKind | Role | Phase | Category | Mixin | RoleMixin |
		//RelatorUniversal | ModeUniversal | QualityUniversal
		public Alternatives getAlternatives() { return cAlternatives; }

		//Kind
		public RuleCall getKindParserRuleCall_0() { return cKindParserRuleCall_0; }

		//QuantityUniversal
		public RuleCall getQuantityUniversalParserRuleCall_1() { return cQuantityUniversalParserRuleCall_1; }

		//CollectiveUniversal
		public RuleCall getCollectiveUniversalParserRuleCall_2() { return cCollectiveUniversalParserRuleCall_2; }

		//SubKind
		public RuleCall getSubKindParserRuleCall_3() { return cSubKindParserRuleCall_3; }

		//Role
		public RuleCall getRoleParserRuleCall_4() { return cRoleParserRuleCall_4; }

		//Phase
		public RuleCall getPhaseParserRuleCall_5() { return cPhaseParserRuleCall_5; }

		//Category
		public RuleCall getCategoryParserRuleCall_6() { return cCategoryParserRuleCall_6; }

		//Mixin
		public RuleCall getMixinParserRuleCall_7() { return cMixinParserRuleCall_7; }

		//RoleMixin
		public RuleCall getRoleMixinParserRuleCall_8() { return cRoleMixinParserRuleCall_8; }

		//RelatorUniversal
		public RuleCall getRelatorUniversalParserRuleCall_9() { return cRelatorUniversalParserRuleCall_9; }

		//ModeUniversal
		public RuleCall getModeUniversalParserRuleCall_10() { return cModeUniversalParserRuleCall_10; }

		//QualityUniversal
		public RuleCall getQualityUniversalParserRuleCall_11() { return cQualityUniversalParserRuleCall_11; }
	}

	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrimitiveDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComplexDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumerationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//DataType:
		//	PrimitiveDataType | ComplexDataType | Enumeration;
		@Override public ParserRule getRule() { return rule; }

		//PrimitiveDataType | ComplexDataType | Enumeration
		public Alternatives getAlternatives() { return cAlternatives; }

		//PrimitiveDataType
		public RuleCall getPrimitiveDataTypeParserRuleCall_0() { return cPrimitiveDataTypeParserRuleCall_0; }

		//ComplexDataType
		public RuleCall getComplexDataTypeParserRuleCall_1() { return cComplexDataTypeParserRuleCall_1; }

		//Enumeration
		public RuleCall getEnumerationParserRuleCall_2() { return cEnumerationParserRuleCall_2; }
	}

	public class IntrinsicMomentUniversalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntrinsicMomentUniversal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cModeUniversalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQualityUniversalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// Only to scope solving
		//IntrinsicMomentUniversal:
		//	ModeUniversal | QualityUniversal;
		@Override public ParserRule getRule() { return rule; }

		//ModeUniversal | QualityUniversal
		public Alternatives getAlternatives() { return cAlternatives; }

		//ModeUniversal
		public RuleCall getModeUniversalParserRuleCall_0() { return cModeUniversalParserRuleCall_0; }

		//QualityUniversal
		public RuleCall getQualityUniversalParserRuleCall_1() { return cQualityUniversalParserRuleCall_1; }
	}

	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsPackageableElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Package:
		//	{Package} "package" name=ID "{" elements+=PackageableElement+ "}";
		@Override public ParserRule getRule() { return rule; }

		//{Package} "package" name=ID "{" elements+=PackageableElement+ "}"
		public Group getGroup() { return cGroup; }

		//{Package}
		public Action getPackageAction_0() { return cPackageAction_0; }

		//"package"
		public Keyword getPackageKeyword_1() { return cPackageKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//elements+=PackageableElement+
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }

		//PackageableElement
		public RuleCall getElementsPackageableElementParserRuleCall_4_0() { return cElementsPackageableElementParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class GeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeneralizationSet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCompleteGeneralizationSetParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnonymousGeneralizationSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		/// *
		// * complete generalizationSet gender specializes Person into Man, Woman
		// * => GeographicalSpace specializes SpatialThing
		// * => GeographicalSpace, FooBar specialize SpatialThing
		// * => GeographicalSpace specializationOf SpatialThing
		// * GeographicalSpace => SpatialThing
		// * GeographicalSpace, MultiDimensionalSpace => SpatialThing
		// * / GeneralizationSet:
		//	CompleteGeneralizationSet | AnonymousGeneralizationSet;
		@Override public ParserRule getRule() { return rule; }

		//CompleteGeneralizationSet | AnonymousGeneralizationSet
		public Alternatives getAlternatives() { return cAlternatives; }

		//CompleteGeneralizationSet
		public RuleCall getCompleteGeneralizationSetParserRuleCall_0() { return cCompleteGeneralizationSetParserRuleCall_0; }

		//AnonymousGeneralizationSet
		public RuleCall getAnonymousGeneralizationSetParserRuleCall_1() { return cAnonymousGeneralizationSetParserRuleCall_1; }
	}

	public class CompleteGeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompleteGeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsCoveringAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsCoveringCompleteKeyword_0_0 = (Keyword)cIsCoveringAssignment_0.eContents().get(0);
		private final Keyword cGeneralizationSetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSpecializesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSpecializedUniversalAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSpecializedUniversalUniversalCrossReference_4_0 = (CrossReference)cSpecializedUniversalAssignment_4.eContents().get(0);
		private final RuleCall cSpecializedUniversalUniversalIDTerminalRuleCall_4_0_1 = (RuleCall)cSpecializedUniversalUniversalCrossReference_4_0.eContents().get(1);
		private final Keyword cIntoKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSpecializingUniversalsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSpecializingUniversalsUniversalCrossReference_6_0 = (CrossReference)cSpecializingUniversalsAssignment_6.eContents().get(0);
		private final RuleCall cSpecializingUniversalsUniversalIDTerminalRuleCall_6_0_1 = (RuleCall)cSpecializingUniversalsUniversalCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSpecializingUniversalsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cSpecializingUniversalsUniversalCrossReference_7_1_0 = (CrossReference)cSpecializingUniversalsAssignment_7_1.eContents().get(0);
		private final RuleCall cSpecializingUniversalsUniversalIDTerminalRuleCall_7_1_0_1 = (RuleCall)cSpecializingUniversalsUniversalCrossReference_7_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//CompleteGeneralizationSet returns GeneralizationSet:
		//	isCovering?="complete"? "GeneralizationSet" name=ID "specializes" specializedUniversal=[Universal] "into"
		//	specializingUniversals+=[Universal] ("," specializingUniversals+=[Universal])* ";";
		@Override public ParserRule getRule() { return rule; }

		//isCovering?="complete"? "GeneralizationSet" name=ID "specializes" specializedUniversal=[Universal] "into"
		//specializingUniversals+=[Universal] ("," specializingUniversals+=[Universal])* ";"
		public Group getGroup() { return cGroup; }

		//isCovering?="complete"?
		public Assignment getIsCoveringAssignment_0() { return cIsCoveringAssignment_0; }

		//"complete"
		public Keyword getIsCoveringCompleteKeyword_0_0() { return cIsCoveringCompleteKeyword_0_0; }

		//"GeneralizationSet"
		public Keyword getGeneralizationSetKeyword_1() { return cGeneralizationSetKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"specializes"
		public Keyword getSpecializesKeyword_3() { return cSpecializesKeyword_3; }

		//specializedUniversal=[Universal]
		public Assignment getSpecializedUniversalAssignment_4() { return cSpecializedUniversalAssignment_4; }

		//[Universal]
		public CrossReference getSpecializedUniversalUniversalCrossReference_4_0() { return cSpecializedUniversalUniversalCrossReference_4_0; }

		//ID
		public RuleCall getSpecializedUniversalUniversalIDTerminalRuleCall_4_0_1() { return cSpecializedUniversalUniversalIDTerminalRuleCall_4_0_1; }

		//"into"
		public Keyword getIntoKeyword_5() { return cIntoKeyword_5; }

		//specializingUniversals+=[Universal]
		public Assignment getSpecializingUniversalsAssignment_6() { return cSpecializingUniversalsAssignment_6; }

		//[Universal]
		public CrossReference getSpecializingUniversalsUniversalCrossReference_6_0() { return cSpecializingUniversalsUniversalCrossReference_6_0; }

		//ID
		public RuleCall getSpecializingUniversalsUniversalIDTerminalRuleCall_6_0_1() { return cSpecializingUniversalsUniversalIDTerminalRuleCall_6_0_1; }

		//("," specializingUniversals+=[Universal])*
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//specializingUniversals+=[Universal]
		public Assignment getSpecializingUniversalsAssignment_7_1() { return cSpecializingUniversalsAssignment_7_1; }

		//[Universal]
		public CrossReference getSpecializingUniversalsUniversalCrossReference_7_1_0() { return cSpecializingUniversalsUniversalCrossReference_7_1_0; }

		//ID
		public RuleCall getSpecializingUniversalsUniversalIDTerminalRuleCall_7_1_0_1() { return cSpecializingUniversalsUniversalIDTerminalRuleCall_7_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class AnonymousGeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnonymousGeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSpecializingUniversalsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSpecializingUniversalsUniversalCrossReference_0_0 = (CrossReference)cSpecializingUniversalsAssignment_0.eContents().get(0);
		private final RuleCall cSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1 = (RuleCall)cSpecializingUniversalsUniversalCrossReference_0_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Keyword cCommaKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cSpecializingUniversalsAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cSpecializingUniversalsUniversalCrossReference_1_0_0_1_0 = (CrossReference)cSpecializingUniversalsAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cSpecializingUniversalsUniversalIDTerminalRuleCall_1_0_0_1_0_1 = (RuleCall)cSpecializingUniversalsUniversalCrossReference_1_0_0_1_0.eContents().get(1);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Keyword cSpecializeKeyword_1_0_1_0 = (Keyword)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1_0_1_1 = (Keyword)cAlternatives_1_0_1.eContents().get(1);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cAlternatives_1.eContents().get(1);
		private final Keyword cSpecializesKeyword_1_1_0 = (Keyword)cAlternatives_1_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1_1_1 = (Keyword)cAlternatives_1_1.eContents().get(1);
		private final Assignment cSpecializedUniversalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSpecializedUniversalUniversalCrossReference_2_0 = (CrossReference)cSpecializedUniversalAssignment_2.eContents().get(0);
		private final RuleCall cSpecializedUniversalUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cSpecializedUniversalUniversalCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AnonymousGeneralizationSet returns GeneralizationSet:
		//	specializingUniversals+=[Universal] (("," specializingUniversals+=[Universal])+ ("specialize" | "=>") | ("specializes"
		//	| "=>")) specializedUniversal=[Universal] ";";
		@Override public ParserRule getRule() { return rule; }

		//specializingUniversals+=[Universal] (("," specializingUniversals+=[Universal])+ ("specialize" | "=>") | ("specializes" |
		//"=>")) specializedUniversal=[Universal] ";"
		public Group getGroup() { return cGroup; }

		//specializingUniversals+=[Universal]
		public Assignment getSpecializingUniversalsAssignment_0() { return cSpecializingUniversalsAssignment_0; }

		//[Universal]
		public CrossReference getSpecializingUniversalsUniversalCrossReference_0_0() { return cSpecializingUniversalsUniversalCrossReference_0_0; }

		//ID
		public RuleCall getSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1() { return cSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1; }

		//("," specializingUniversals+=[Universal])+ ("specialize" | "=>") | ("specializes" | "=>")
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//("," specializingUniversals+=[Universal])+ ("specialize" | "=>")
		public Group getGroup_1_0() { return cGroup_1_0; }

		//("," specializingUniversals+=[Universal])+
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//","
		public Keyword getCommaKeyword_1_0_0_0() { return cCommaKeyword_1_0_0_0; }

		//specializingUniversals+=[Universal]
		public Assignment getSpecializingUniversalsAssignment_1_0_0_1() { return cSpecializingUniversalsAssignment_1_0_0_1; }

		//[Universal]
		public CrossReference getSpecializingUniversalsUniversalCrossReference_1_0_0_1_0() { return cSpecializingUniversalsUniversalCrossReference_1_0_0_1_0; }

		//ID
		public RuleCall getSpecializingUniversalsUniversalIDTerminalRuleCall_1_0_0_1_0_1() { return cSpecializingUniversalsUniversalIDTerminalRuleCall_1_0_0_1_0_1; }

		//"specialize" | "=>"
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }

		//"specialize"
		public Keyword getSpecializeKeyword_1_0_1_0() { return cSpecializeKeyword_1_0_1_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1_0_1_1() { return cEqualsSignGreaterThanSignKeyword_1_0_1_1; }

		//"specializes" | "=>"
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//"specializes"
		public Keyword getSpecializesKeyword_1_1_0() { return cSpecializesKeyword_1_1_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1_1_1() { return cEqualsSignGreaterThanSignKeyword_1_1_1; }

		//specializedUniversal=[Universal]
		public Assignment getSpecializedUniversalAssignment_2() { return cSpecializedUniversalAssignment_2; }

		//[Universal]
		public CrossReference getSpecializedUniversalUniversalCrossReference_2_0() { return cSpecializedUniversalUniversalCrossReference_2_0; }

		//ID
		public RuleCall getSpecializedUniversalUniversalIDTerminalRuleCall_2_0_1() { return cSpecializedUniversalUniversalIDTerminalRuleCall_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class SingleAnonymousGeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SingleAnonymousGeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSpecializingUniversalsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSpecializingUniversalsUniversalCrossReference_0_0 = (CrossReference)cSpecializingUniversalsAssignment_0.eContents().get(0);
		private final RuleCall cSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1 = (RuleCall)cSpecializingUniversalsUniversalCrossReference_0_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cSpecializesKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cSpecializedUniversalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSpecializedUniversalUniversalCrossReference_2_0 = (CrossReference)cSpecializedUniversalAssignment_2.eContents().get(0);
		private final RuleCall cSpecializedUniversalUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cSpecializedUniversalUniversalCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SingleAnonymousGeneralizationSet returns GeneralizationSet:
		//	specializingUniversals+=[Universal] ("specializes" | "=>") specializedUniversal=[Universal] ";";
		@Override public ParserRule getRule() { return rule; }

		//specializingUniversals+=[Universal] ("specializes" | "=>") specializedUniversal=[Universal] ";"
		public Group getGroup() { return cGroup; }

		//specializingUniversals+=[Universal]
		public Assignment getSpecializingUniversalsAssignment_0() { return cSpecializingUniversalsAssignment_0; }

		//[Universal]
		public CrossReference getSpecializingUniversalsUniversalCrossReference_0_0() { return cSpecializingUniversalsUniversalCrossReference_0_0; }

		//ID
		public RuleCall getSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1() { return cSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1; }

		//"specializes" | "=>"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"specializes"
		public Keyword getSpecializesKeyword_1_0() { return cSpecializesKeyword_1_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1_1() { return cEqualsSignGreaterThanSignKeyword_1_1; }

		//specializedUniversal=[Universal]
		public Assignment getSpecializedUniversalAssignment_2() { return cSpecializedUniversalAssignment_2; }

		//[Universal]
		public CrossReference getSpecializedUniversalUniversalCrossReference_2_0() { return cSpecializedUniversalUniversalCrossReference_2_0; }

		//ID
		public RuleCall getSpecializedUniversalUniversalIDTerminalRuleCall_2_0_1() { return cSpecializedUniversalUniversalIDTerminalRuleCall_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class MultipleAnonymousGeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultipleAnonymousGeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSpecializingUniversalsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSpecializingUniversalsUniversalCrossReference_0_0 = (CrossReference)cSpecializingUniversalsAssignment_0.eContents().get(0);
		private final RuleCall cSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1 = (RuleCall)cSpecializingUniversalsUniversalCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSpecializingUniversalsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cSpecializingUniversalsUniversalCrossReference_1_1_0 = (CrossReference)cSpecializingUniversalsAssignment_1_1.eContents().get(0);
		private final RuleCall cSpecializingUniversalsUniversalIDTerminalRuleCall_1_1_0_1 = (RuleCall)cSpecializingUniversalsUniversalCrossReference_1_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSpecializeKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Assignment cSpecializedUniversalAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSpecializedUniversalUniversalCrossReference_3_0 = (CrossReference)cSpecializedUniversalAssignment_3.eContents().get(0);
		private final RuleCall cSpecializedUniversalUniversalIDTerminalRuleCall_3_0_1 = (RuleCall)cSpecializedUniversalUniversalCrossReference_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MultipleAnonymousGeneralizationSet returns GeneralizationSet:
		//	specializingUniversals+=[Universal] ("," specializingUniversals+=[Universal])+ ("specialize" | "=>")
		//	specializedUniversal=[Universal] ";";
		@Override public ParserRule getRule() { return rule; }

		//specializingUniversals+=[Universal] ("," specializingUniversals+=[Universal])+ ("specialize" | "=>")
		//specializedUniversal=[Universal] ";"
		public Group getGroup() { return cGroup; }

		//specializingUniversals+=[Universal]
		public Assignment getSpecializingUniversalsAssignment_0() { return cSpecializingUniversalsAssignment_0; }

		//[Universal]
		public CrossReference getSpecializingUniversalsUniversalCrossReference_0_0() { return cSpecializingUniversalsUniversalCrossReference_0_0; }

		//ID
		public RuleCall getSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1() { return cSpecializingUniversalsUniversalIDTerminalRuleCall_0_0_1; }

		//("," specializingUniversals+=[Universal])+
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//specializingUniversals+=[Universal]
		public Assignment getSpecializingUniversalsAssignment_1_1() { return cSpecializingUniversalsAssignment_1_1; }

		//[Universal]
		public CrossReference getSpecializingUniversalsUniversalCrossReference_1_1_0() { return cSpecializingUniversalsUniversalCrossReference_1_1_0; }

		//ID
		public RuleCall getSpecializingUniversalsUniversalIDTerminalRuleCall_1_1_0_1() { return cSpecializingUniversalsUniversalIDTerminalRuleCall_1_1_0_1; }

		//"specialize" | "=>"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"specialize"
		public Keyword getSpecializeKeyword_2_0() { return cSpecializeKeyword_2_0; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_2_1() { return cEqualsSignGreaterThanSignKeyword_2_1; }

		//specializedUniversal=[Universal]
		public Assignment getSpecializedUniversalAssignment_3() { return cSpecializedUniversalAssignment_3; }

		//[Universal]
		public CrossReference getSpecializedUniversalUniversalCrossReference_3_0() { return cSpecializedUniversalUniversalCrossReference_3_0; }

		//ID
		public RuleCall getSpecializedUniversalUniversalIDTerminalRuleCall_3_0_1() { return cSpecializedUniversalUniversalIDTerminalRuleCall_3_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class PrimitiveDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrimitiveDataTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment c_typeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall c_typePrimitiveDataTypeTypeParserRuleCall_3_0 = (RuleCall)c_typeAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PrimitiveDataType:
		//	"PrimitiveDataType" name=ID "(" _type=PrimitiveDataTypeType ")" ";";
		@Override public ParserRule getRule() { return rule; }

		//"PrimitiveDataType" name=ID "(" _type=PrimitiveDataTypeType ")" ";"
		public Group getGroup() { return cGroup; }

		//"PrimitiveDataType"
		public Keyword getPrimitiveDataTypeKeyword_0() { return cPrimitiveDataTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//_type=PrimitiveDataTypeType
		public Assignment get_typeAssignment_3() { return c_typeAssignment_3; }

		//PrimitiveDataTypeType
		public RuleCall get_typePrimitiveDataTypeTypeParserRuleCall_3_0() { return c_typePrimitiveDataTypeTypeParserRuleCall_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class ComplexDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComplexDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComplexDataTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesDataTypeAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesDataTypeAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ComplexDataType:
		//	"ComplexDataType" name=ID "{" attributes+=DataTypeAttribute (";" attributes+=DataTypeAttribute)* "}";
		@Override public ParserRule getRule() { return rule; }

		//"ComplexDataType" name=ID "{" attributes+=DataTypeAttribute (";" attributes+=DataTypeAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"ComplexDataType"
		public Keyword getComplexDataTypeKeyword_0() { return cComplexDataTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//attributes+=DataTypeAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//DataTypeAttribute
		public RuleCall getAttributesDataTypeAttributeParserRuleCall_3_0() { return cAttributesDataTypeAttributeParserRuleCall_3_0; }

		//(";" attributes+=DataTypeAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//";"
		public Keyword getSemicolonKeyword_4_0() { return cSemicolonKeyword_4_0; }

		//attributes+=DataTypeAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//DataTypeAttribute
		public RuleCall getAttributesDataTypeAttributeParserRuleCall_4_1_0() { return cAttributesDataTypeAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EnumerationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Enumeration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEnumerationLiteralsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEnumerationLiteralsEStringParserRuleCall_3_0 = (RuleCall)cEnumerationLiteralsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEnumerationLiteralsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEnumerationLiteralsEStringParserRuleCall_4_1_0 = (RuleCall)cEnumerationLiteralsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Enumeration:
		//	"enum" name=ID "{" enumerationLiterals+=EString ("," enumerationLiterals+=EString)* "}";
		@Override public ParserRule getRule() { return rule; }

		//"enum" name=ID "{" enumerationLiterals+=EString ("," enumerationLiterals+=EString)* "}"
		public Group getGroup() { return cGroup; }

		//"enum"
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//enumerationLiterals+=EString
		public Assignment getEnumerationLiteralsAssignment_3() { return cEnumerationLiteralsAssignment_3; }

		//EString
		public RuleCall getEnumerationLiteralsEStringParserRuleCall_3_0() { return cEnumerationLiteralsEStringParserRuleCall_3_0; }

		//("," enumerationLiterals+=EString)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//enumerationLiterals+=EString
		public Assignment getEnumerationLiteralsAssignment_4_1() { return cEnumerationLiteralsAssignment_4_1; }

		//EString
		public RuleCall getEnumerationLiteralsEStringParserRuleCall_4_1_0() { return cEnumerationLiteralsEStringParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class MeronymicRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MeronymicRelation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComponentOfRelationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMembershipRelationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSubCollectionRelationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSubQuantityRelationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//MeronymicRelation:
		//	ComponentOfRelation | MembershipRelation | SubCollectionRelation | SubQuantityRelation;
		@Override public ParserRule getRule() { return rule; }

		//ComponentOfRelation | MembershipRelation | SubCollectionRelation | SubQuantityRelation
		public Alternatives getAlternatives() { return cAlternatives; }

		//ComponentOfRelation
		public RuleCall getComponentOfRelationParserRuleCall_0() { return cComponentOfRelationParserRuleCall_0; }

		//MembershipRelation
		public RuleCall getMembershipRelationParserRuleCall_1() { return cMembershipRelationParserRuleCall_1; }

		//SubCollectionRelation
		public RuleCall getSubCollectionRelationParserRuleCall_2() { return cSubCollectionRelationParserRuleCall_2; }

		//SubQuantityRelation
		public RuleCall getSubQuantityRelationParserRuleCall_3() { return cSubQuantityRelationParserRuleCall_3; }
	}

	public class ComponentOfRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentOfRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cPartIsEssentialAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cPartIsEssentialEssentialKeyword_0_0_0 = (Keyword)cPartIsEssentialAssignment_0_0.eContents().get(0);
		private final Assignment cPartIsInseparableAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cPartIsInseparableInseparableKeyword_0_1_0 = (Keyword)cPartIsInseparableAssignment_0_1.eContents().get(0);
		private final Assignment cPartIsShareableAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Keyword cPartIsShareableShareableKeyword_0_2_0 = (Keyword)cPartIsShareableAssignment_0_2.eContents().get(0);
		private final Assignment cPartIsImmutableAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final Keyword cPartIsImmutableImmutableKeyword_0_3_0 = (Keyword)cPartIsImmutableAssignment_0_3.eContents().get(0);
		private final Keyword cRelationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPartAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cPartSubstantialUniversalCrossReference_2_0 = (CrossReference)cPartAssignment_2.eContents().get(0);
		private final RuleCall cPartSubstantialUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cPartSubstantialUniversalCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0 = (RuleCall)cSourceLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0 = (RuleCall)cSourceUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cIsComponentOfKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWholeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cWholeSubstantialUniversalCrossReference_5_0 = (CrossReference)cWholeAssignment_5.eContents().get(0);
		private final RuleCall cWholeSubstantialUniversalIDTerminalRuleCall_5_0_1 = (RuleCall)cWholeSubstantialUniversalCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTargetLowerBoundAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0 = (RuleCall)cTargetLowerBoundAssignment_6_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cTargetUpperBoundAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0 = (RuleCall)cTargetUpperBoundAssignment_6_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		// * Example
		// * 
		// * Foo [1..1] isComponentOf Bar [1..1]; 
		// * / ComponentOfRelation:
		//	(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//	partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//	sourceUpperBound=CardinalityUpperBound "]")? "isComponentOf" whole=[SubstantialUniversal] ("["
		//	targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";";
		@Override public ParserRule getRule() { return rule; }

		//(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//sourceUpperBound=CardinalityUpperBound "]")? "isComponentOf" whole=[SubstantialUniversal] ("["
		//targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";"
		public Group getGroup() { return cGroup; }

		//partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//partIsImmutable?="immutable"?
		public Group getGroup_0() { return cGroup_0; }

		//partIsEssential?="essential"?
		public Assignment getPartIsEssentialAssignment_0_0() { return cPartIsEssentialAssignment_0_0; }

		//"essential"
		public Keyword getPartIsEssentialEssentialKeyword_0_0_0() { return cPartIsEssentialEssentialKeyword_0_0_0; }

		//partIsInseparable?="inseparable"?
		public Assignment getPartIsInseparableAssignment_0_1() { return cPartIsInseparableAssignment_0_1; }

		//"inseparable"
		public Keyword getPartIsInseparableInseparableKeyword_0_1_0() { return cPartIsInseparableInseparableKeyword_0_1_0; }

		//partIsShareable?="shareable"?
		public Assignment getPartIsShareableAssignment_0_2() { return cPartIsShareableAssignment_0_2; }

		//"shareable"
		public Keyword getPartIsShareableShareableKeyword_0_2_0() { return cPartIsShareableShareableKeyword_0_2_0; }

		//partIsImmutable?="immutable"?
		public Assignment getPartIsImmutableAssignment_0_3() { return cPartIsImmutableAssignment_0_3; }

		//"immutable"
		public Keyword getPartIsImmutableImmutableKeyword_0_3_0() { return cPartIsImmutableImmutableKeyword_0_3_0; }

		//"relation"
		public Keyword getRelationKeyword_1() { return cRelationKeyword_1; }

		//part=[SubstantialUniversal]
		public Assignment getPartAssignment_2() { return cPartAssignment_2; }

		//[SubstantialUniversal]
		public CrossReference getPartSubstantialUniversalCrossReference_2_0() { return cPartSubstantialUniversalCrossReference_2_0; }

		//ID
		public RuleCall getPartSubstantialUniversalIDTerminalRuleCall_2_0_1() { return cPartSubstantialUniversalIDTerminalRuleCall_2_0_1; }

		//("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//sourceLowerBound=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_3_1() { return cSourceLowerBoundAssignment_3_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }

		//sourceUpperBound=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_3_3() { return cSourceUpperBoundAssignment_3_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//"isComponentOf"
		public Keyword getIsComponentOfKeyword_4() { return cIsComponentOfKeyword_4; }

		//whole=[SubstantialUniversal]
		public Assignment getWholeAssignment_5() { return cWholeAssignment_5; }

		//[SubstantialUniversal]
		public CrossReference getWholeSubstantialUniversalCrossReference_5_0() { return cWholeSubstantialUniversalCrossReference_5_0; }

		//ID
		public RuleCall getWholeSubstantialUniversalIDTerminalRuleCall_5_0_1() { return cWholeSubstantialUniversalIDTerminalRuleCall_5_0_1; }

		//("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_6() { return cGroup_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }

		//targetLowerBound=CardinalityBound
		public Assignment getTargetLowerBoundAssignment_6_1() { return cTargetLowerBoundAssignment_6_1; }

		//CardinalityBound
		public RuleCall getTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0() { return cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_6_2() { return cFullStopFullStopKeyword_6_2; }

		//targetUpperBound=CardinalityUpperBound
		public Assignment getTargetUpperBoundAssignment_6_3() { return cTargetUpperBoundAssignment_6_3; }

		//CardinalityUpperBound
		public RuleCall getTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0() { return cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_4() { return cRightSquareBracketKeyword_6_4; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class MembershipRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MembershipRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cPartIsEssentialAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cPartIsEssentialEssentialKeyword_0_0_0 = (Keyword)cPartIsEssentialAssignment_0_0.eContents().get(0);
		private final Assignment cPartIsInseparableAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cPartIsInseparableInseparableKeyword_0_1_0 = (Keyword)cPartIsInseparableAssignment_0_1.eContents().get(0);
		private final Assignment cPartIsShareableAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Keyword cPartIsShareableShareableKeyword_0_2_0 = (Keyword)cPartIsShareableAssignment_0_2.eContents().get(0);
		private final Assignment cPartIsImmutableAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final Keyword cPartIsImmutableImmutableKeyword_0_3_0 = (Keyword)cPartIsImmutableAssignment_0_3.eContents().get(0);
		private final Keyword cRelationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPartAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cPartSubstantialUniversalCrossReference_2_0 = (CrossReference)cPartAssignment_2.eContents().get(0);
		private final RuleCall cPartSubstantialUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cPartSubstantialUniversalCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0 = (RuleCall)cSourceLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0 = (RuleCall)cSourceUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cIsMemberOfKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWholeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cWholeSubstantialUniversalCrossReference_5_0 = (CrossReference)cWholeAssignment_5.eContents().get(0);
		private final RuleCall cWholeSubstantialUniversalIDTerminalRuleCall_5_0_1 = (RuleCall)cWholeSubstantialUniversalCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTargetLowerBoundAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0 = (RuleCall)cTargetLowerBoundAssignment_6_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cTargetUpperBoundAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0 = (RuleCall)cTargetUpperBoundAssignment_6_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		// * Example
		// * 
		// * Foo [1..1] isMemberOf Bar [1..1]; 
		// * / MembershipRelation:
		//	(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//	partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//	sourceUpperBound=CardinalityUpperBound "]")? "isMemberOf" whole=[SubstantialUniversal] ("["
		//	targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";";
		@Override public ParserRule getRule() { return rule; }

		//(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//sourceUpperBound=CardinalityUpperBound "]")? "isMemberOf" whole=[SubstantialUniversal] ("["
		//targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";"
		public Group getGroup() { return cGroup; }

		//partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//partIsImmutable?="immutable"?
		public Group getGroup_0() { return cGroup_0; }

		//partIsEssential?="essential"?
		public Assignment getPartIsEssentialAssignment_0_0() { return cPartIsEssentialAssignment_0_0; }

		//"essential"
		public Keyword getPartIsEssentialEssentialKeyword_0_0_0() { return cPartIsEssentialEssentialKeyword_0_0_0; }

		//partIsInseparable?="inseparable"?
		public Assignment getPartIsInseparableAssignment_0_1() { return cPartIsInseparableAssignment_0_1; }

		//"inseparable"
		public Keyword getPartIsInseparableInseparableKeyword_0_1_0() { return cPartIsInseparableInseparableKeyword_0_1_0; }

		//partIsShareable?="shareable"?
		public Assignment getPartIsShareableAssignment_0_2() { return cPartIsShareableAssignment_0_2; }

		//"shareable"
		public Keyword getPartIsShareableShareableKeyword_0_2_0() { return cPartIsShareableShareableKeyword_0_2_0; }

		//partIsImmutable?="immutable"?
		public Assignment getPartIsImmutableAssignment_0_3() { return cPartIsImmutableAssignment_0_3; }

		//"immutable"
		public Keyword getPartIsImmutableImmutableKeyword_0_3_0() { return cPartIsImmutableImmutableKeyword_0_3_0; }

		//"relation"
		public Keyword getRelationKeyword_1() { return cRelationKeyword_1; }

		//part=[SubstantialUniversal]
		public Assignment getPartAssignment_2() { return cPartAssignment_2; }

		//[SubstantialUniversal]
		public CrossReference getPartSubstantialUniversalCrossReference_2_0() { return cPartSubstantialUniversalCrossReference_2_0; }

		//ID
		public RuleCall getPartSubstantialUniversalIDTerminalRuleCall_2_0_1() { return cPartSubstantialUniversalIDTerminalRuleCall_2_0_1; }

		//("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//sourceLowerBound=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_3_1() { return cSourceLowerBoundAssignment_3_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }

		//sourceUpperBound=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_3_3() { return cSourceUpperBoundAssignment_3_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//"isMemberOf"
		public Keyword getIsMemberOfKeyword_4() { return cIsMemberOfKeyword_4; }

		//whole=[SubstantialUniversal]
		public Assignment getWholeAssignment_5() { return cWholeAssignment_5; }

		//[SubstantialUniversal]
		public CrossReference getWholeSubstantialUniversalCrossReference_5_0() { return cWholeSubstantialUniversalCrossReference_5_0; }

		//ID
		public RuleCall getWholeSubstantialUniversalIDTerminalRuleCall_5_0_1() { return cWholeSubstantialUniversalIDTerminalRuleCall_5_0_1; }

		//("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_6() { return cGroup_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }

		//targetLowerBound=CardinalityBound
		public Assignment getTargetLowerBoundAssignment_6_1() { return cTargetLowerBoundAssignment_6_1; }

		//CardinalityBound
		public RuleCall getTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0() { return cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_6_2() { return cFullStopFullStopKeyword_6_2; }

		//targetUpperBound=CardinalityUpperBound
		public Assignment getTargetUpperBoundAssignment_6_3() { return cTargetUpperBoundAssignment_6_3; }

		//CardinalityUpperBound
		public RuleCall getTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0() { return cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_4() { return cRightSquareBracketKeyword_6_4; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class SubCollectionRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubCollectionRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cPartIsEssentialAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cPartIsEssentialEssentialKeyword_0_0_0 = (Keyword)cPartIsEssentialAssignment_0_0.eContents().get(0);
		private final Assignment cPartIsInseparableAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cPartIsInseparableInseparableKeyword_0_1_0 = (Keyword)cPartIsInseparableAssignment_0_1.eContents().get(0);
		private final Assignment cPartIsShareableAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Keyword cPartIsShareableShareableKeyword_0_2_0 = (Keyword)cPartIsShareableAssignment_0_2.eContents().get(0);
		private final Assignment cPartIsImmutableAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final Keyword cPartIsImmutableImmutableKeyword_0_3_0 = (Keyword)cPartIsImmutableAssignment_0_3.eContents().get(0);
		private final Keyword cRelationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPartAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cPartSubstantialUniversalCrossReference_2_0 = (CrossReference)cPartAssignment_2.eContents().get(0);
		private final RuleCall cPartSubstantialUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cPartSubstantialUniversalCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0 = (RuleCall)cSourceLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0 = (RuleCall)cSourceUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cIsSubCollectionOfKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWholeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cWholeSubstantialUniversalCrossReference_5_0 = (CrossReference)cWholeAssignment_5.eContents().get(0);
		private final RuleCall cWholeSubstantialUniversalIDTerminalRuleCall_5_0_1 = (RuleCall)cWholeSubstantialUniversalCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTargetLowerBoundAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0 = (RuleCall)cTargetLowerBoundAssignment_6_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cTargetUpperBoundAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0 = (RuleCall)cTargetUpperBoundAssignment_6_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		// * Example
		// * 
		// * Foo [1..1] isSubcollectionOf Bar [1..1];
		// * 
		// * GUIZZARDI, pg. 351 
		// * / SubCollectionRelation:
		//	(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//	partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//	sourceUpperBound=CardinalityUpperBound "]")? "isSubCollectionOf" whole=[SubstantialUniversal] ("["
		//	targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";";
		@Override public ParserRule getRule() { return rule; }

		//(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//sourceUpperBound=CardinalityUpperBound "]")? "isSubCollectionOf" whole=[SubstantialUniversal] ("["
		//targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";"
		public Group getGroup() { return cGroup; }

		//partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
		//partIsImmutable?="immutable"?
		public Group getGroup_0() { return cGroup_0; }

		//partIsEssential?="essential"?
		public Assignment getPartIsEssentialAssignment_0_0() { return cPartIsEssentialAssignment_0_0; }

		//"essential"
		public Keyword getPartIsEssentialEssentialKeyword_0_0_0() { return cPartIsEssentialEssentialKeyword_0_0_0; }

		//partIsInseparable?="inseparable"?
		public Assignment getPartIsInseparableAssignment_0_1() { return cPartIsInseparableAssignment_0_1; }

		//"inseparable"
		public Keyword getPartIsInseparableInseparableKeyword_0_1_0() { return cPartIsInseparableInseparableKeyword_0_1_0; }

		//partIsShareable?="shareable"?
		public Assignment getPartIsShareableAssignment_0_2() { return cPartIsShareableAssignment_0_2; }

		//"shareable"
		public Keyword getPartIsShareableShareableKeyword_0_2_0() { return cPartIsShareableShareableKeyword_0_2_0; }

		//partIsImmutable?="immutable"?
		public Assignment getPartIsImmutableAssignment_0_3() { return cPartIsImmutableAssignment_0_3; }

		//"immutable"
		public Keyword getPartIsImmutableImmutableKeyword_0_3_0() { return cPartIsImmutableImmutableKeyword_0_3_0; }

		//"relation"
		public Keyword getRelationKeyword_1() { return cRelationKeyword_1; }

		//part=[SubstantialUniversal]
		public Assignment getPartAssignment_2() { return cPartAssignment_2; }

		//[SubstantialUniversal]
		public CrossReference getPartSubstantialUniversalCrossReference_2_0() { return cPartSubstantialUniversalCrossReference_2_0; }

		//ID
		public RuleCall getPartSubstantialUniversalIDTerminalRuleCall_2_0_1() { return cPartSubstantialUniversalIDTerminalRuleCall_2_0_1; }

		//("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//sourceLowerBound=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_3_1() { return cSourceLowerBoundAssignment_3_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }

		//sourceUpperBound=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_3_3() { return cSourceUpperBoundAssignment_3_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//"isSubCollectionOf"
		public Keyword getIsSubCollectionOfKeyword_4() { return cIsSubCollectionOfKeyword_4; }

		//whole=[SubstantialUniversal]
		public Assignment getWholeAssignment_5() { return cWholeAssignment_5; }

		//[SubstantialUniversal]
		public CrossReference getWholeSubstantialUniversalCrossReference_5_0() { return cWholeSubstantialUniversalCrossReference_5_0; }

		//ID
		public RuleCall getWholeSubstantialUniversalIDTerminalRuleCall_5_0_1() { return cWholeSubstantialUniversalIDTerminalRuleCall_5_0_1; }

		//("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_6() { return cGroup_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }

		//targetLowerBound=CardinalityBound
		public Assignment getTargetLowerBoundAssignment_6_1() { return cTargetLowerBoundAssignment_6_1; }

		//CardinalityBound
		public RuleCall getTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0() { return cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_6_2() { return cFullStopFullStopKeyword_6_2; }

		//targetUpperBound=CardinalityUpperBound
		public Assignment getTargetUpperBoundAssignment_6_3() { return cTargetUpperBoundAssignment_6_3; }

		//CardinalityUpperBound
		public RuleCall getTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0() { return cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_4() { return cRightSquareBracketKeyword_6_4; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class SubQuantityRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubQuantityRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cPartIsEssentialAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cPartIsEssentialEssentialKeyword_0_0_0 = (Keyword)cPartIsEssentialAssignment_0_0.eContents().get(0);
		private final Assignment cPartIsInseparableAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cPartIsInseparableInseparableKeyword_0_1_0 = (Keyword)cPartIsInseparableAssignment_0_1.eContents().get(0);
		private final Assignment cPartIsImmutableAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Keyword cPartIsImmutableImmutableKeyword_0_2_0 = (Keyword)cPartIsImmutableAssignment_0_2.eContents().get(0);
		private final Keyword cRelationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPartAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cPartSubstantialUniversalCrossReference_2_0 = (CrossReference)cPartAssignment_2.eContents().get(0);
		private final RuleCall cPartSubstantialUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cPartSubstantialUniversalCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0 = (RuleCall)cSourceLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0 = (RuleCall)cSourceUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cIsSubQuantityOfKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWholeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cWholeSubstantialUniversalCrossReference_5_0 = (CrossReference)cWholeAssignment_5.eContents().get(0);
		private final RuleCall cWholeSubstantialUniversalIDTerminalRuleCall_5_0_1 = (RuleCall)cWholeSubstantialUniversalCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTargetLowerBoundAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0 = (RuleCall)cTargetLowerBoundAssignment_6_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cTargetUpperBoundAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0 = (RuleCall)cTargetUpperBoundAssignment_6_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		// * Example
		// * 
		// * Foo [1..1] isComponentOf Bar [1..1];
		// * 
		// * GUIZZARDI, pg. 350 
		// * / SubQuantityRelation:
		//	(partIsEssential?="essential"? partIsInseparable?="inseparable"? // Is always false
		//	// partIsShareable?='shareable' & 
		//	partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//	sourceUpperBound=CardinalityUpperBound "]")? "isSubQuantityOf" whole=[SubstantialUniversal] ("["
		//	targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";";
		@Override public ParserRule getRule() { return rule; }

		//(partIsEssential?="essential"? partIsInseparable?="inseparable"? // Is always false
		//// partIsShareable?='shareable' & 
		//partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//sourceUpperBound=CardinalityUpperBound "]")? "isSubQuantityOf" whole=[SubstantialUniversal] ("["
		//targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";"
		public Group getGroup() { return cGroup; }

		//partIsEssential?="essential"? partIsInseparable?="inseparable"? // Is always false
		//// partIsShareable?='shareable' & 
		//partIsImmutable?="immutable"?
		public Group getGroup_0() { return cGroup_0; }

		//partIsEssential?="essential"?
		public Assignment getPartIsEssentialAssignment_0_0() { return cPartIsEssentialAssignment_0_0; }

		//"essential"
		public Keyword getPartIsEssentialEssentialKeyword_0_0_0() { return cPartIsEssentialEssentialKeyword_0_0_0; }

		//partIsInseparable?="inseparable"?
		public Assignment getPartIsInseparableAssignment_0_1() { return cPartIsInseparableAssignment_0_1; }

		//"inseparable"
		public Keyword getPartIsInseparableInseparableKeyword_0_1_0() { return cPartIsInseparableInseparableKeyword_0_1_0; }

		//partIsImmutable?="immutable"?
		public Assignment getPartIsImmutableAssignment_0_2() { return cPartIsImmutableAssignment_0_2; }

		//"immutable"
		public Keyword getPartIsImmutableImmutableKeyword_0_2_0() { return cPartIsImmutableImmutableKeyword_0_2_0; }

		//"relation"
		public Keyword getRelationKeyword_1() { return cRelationKeyword_1; }

		//part=[SubstantialUniversal]
		public Assignment getPartAssignment_2() { return cPartAssignment_2; }

		//[SubstantialUniversal]
		public CrossReference getPartSubstantialUniversalCrossReference_2_0() { return cPartSubstantialUniversalCrossReference_2_0; }

		//ID
		public RuleCall getPartSubstantialUniversalIDTerminalRuleCall_2_0_1() { return cPartSubstantialUniversalIDTerminalRuleCall_2_0_1; }

		//("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//sourceLowerBound=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_3_1() { return cSourceLowerBoundAssignment_3_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }

		//sourceUpperBound=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_3_3() { return cSourceUpperBoundAssignment_3_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//"isSubQuantityOf"
		public Keyword getIsSubQuantityOfKeyword_4() { return cIsSubQuantityOfKeyword_4; }

		//whole=[SubstantialUniversal]
		public Assignment getWholeAssignment_5() { return cWholeAssignment_5; }

		//[SubstantialUniversal]
		public CrossReference getWholeSubstantialUniversalCrossReference_5_0() { return cWholeSubstantialUniversalCrossReference_5_0; }

		//ID
		public RuleCall getWholeSubstantialUniversalIDTerminalRuleCall_5_0_1() { return cWholeSubstantialUniversalIDTerminalRuleCall_5_0_1; }

		//("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_6() { return cGroup_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }

		//targetLowerBound=CardinalityBound
		public Assignment getTargetLowerBoundAssignment_6_1() { return cTargetLowerBoundAssignment_6_1; }

		//CardinalityBound
		public RuleCall getTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0() { return cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_6_2() { return cFullStopFullStopKeyword_6_2; }

		//targetUpperBound=CardinalityUpperBound
		public Assignment getTargetUpperBoundAssignment_6_3() { return cTargetUpperBoundAssignment_6_3; }

		//CardinalityUpperBound
		public RuleCall getTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0() { return cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_4() { return cRightSquareBracketKeyword_6_4; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class KindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Kind");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKindAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKindKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCharacterizedByAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_4_0 = (RuleCall)cCharacterizedByAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *
		// * Example
		// * 
		// * Kind Foo {
		// * 
		// * }
		// * / Kind:
		//	{Kind} "Kind" name=ID "{" characterizedBy+=Characterization* "}";
		@Override public ParserRule getRule() { return rule; }

		//{Kind} "Kind" name=ID "{" characterizedBy+=Characterization* "}"
		public Group getGroup() { return cGroup; }

		//{Kind}
		public Action getKindAction_0() { return cKindAction_0; }

		//"Kind"
		public Keyword getKindKeyword_1() { return cKindKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_4() { return cCharacterizedByAssignment_4; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_4_0() { return cCharacterizedByCharacterizationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class QuantityUniversalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QuantityUniversal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cQuantityUniversalAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cQuantityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCharacterizedByAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_4_0 = (RuleCall)cCharacterizedByAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//QuantityUniversal:
		//	{QuantityUniversal} "Quantity" name=ID "{" characterizedBy+=Characterization* "}";
		@Override public ParserRule getRule() { return rule; }

		//{QuantityUniversal} "Quantity" name=ID "{" characterizedBy+=Characterization* "}"
		public Group getGroup() { return cGroup; }

		//{QuantityUniversal}
		public Action getQuantityUniversalAction_0() { return cQuantityUniversalAction_0; }

		//"Quantity"
		public Keyword getQuantityKeyword_1() { return cQuantityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_4() { return cCharacterizedByAssignment_4; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_4_0() { return cCharacterizedByCharacterizationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class CollectiveUniversalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CollectiveUniversal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsExtensionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsExtensionalExtensionalKeyword_0_0 = (Keyword)cIsExtensionalAssignment_0.eContents().get(0);
		private final Keyword cCollectiveUniversalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCharacterizedByAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_4_0 = (RuleCall)cCharacterizedByAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CollectiveUniversal:
		//	isExtensional?="extensional"? "CollectiveUniversal" name=ID "{" characterizedBy+=Characterization* "}";
		@Override public ParserRule getRule() { return rule; }

		//isExtensional?="extensional"? "CollectiveUniversal" name=ID "{" characterizedBy+=Characterization* "}"
		public Group getGroup() { return cGroup; }

		//isExtensional?="extensional"?
		public Assignment getIsExtensionalAssignment_0() { return cIsExtensionalAssignment_0; }

		//"extensional"
		public Keyword getIsExtensionalExtensionalKeyword_0_0() { return cIsExtensionalExtensionalKeyword_0_0; }

		//"CollectiveUniversal"
		public Keyword getCollectiveUniversalKeyword_1() { return cCollectiveUniversalKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_4() { return cCharacterizedByAssignment_4; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_4_0() { return cCharacterizedByCharacterizationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SubKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubKind");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSubKindAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSubKindKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCharacterizedByAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_4_0 = (RuleCall)cCharacterizedByAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SubKind:
		//	{SubKind} "SubKind" name=ID "{" characterizedBy+=Characterization* "}";
		@Override public ParserRule getRule() { return rule; }

		//{SubKind} "SubKind" name=ID "{" characterizedBy+=Characterization* "}"
		public Group getGroup() { return cGroup; }

		//{SubKind}
		public Action getSubKindAction_0() { return cSubKindAction_0; }

		//"SubKind"
		public Keyword getSubKindKeyword_1() { return cSubKindKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_4() { return cCharacterizedByAssignment_4; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_4_0() { return cCharacterizedByCharacterizationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCharacterizedByAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_3_0 = (RuleCall)cCharacterizedByAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// *
		// * Example
		// * 
		// * 
		// * / Role:
		//	"Role" name=ID "{" characterizedBy+=Characterization* "}";
		@Override public ParserRule getRule() { return rule; }

		//"Role" name=ID "{" characterizedBy+=Characterization* "}"
		public Group getGroup() { return cGroup; }

		//"Role"
		public Keyword getRoleKeyword_0() { return cRoleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_3() { return cCharacterizedByAssignment_3; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_3_0() { return cCharacterizedByCharacterizationParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PhaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Phase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPhaseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPhaseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCharacterizedByAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_4_0 = (RuleCall)cCharacterizedByAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Phase:
		//	{Phase} "Phase" name=ID "{" characterizedBy+=Characterization* "}";
		@Override public ParserRule getRule() { return rule; }

		//{Phase} "Phase" name=ID "{" characterizedBy+=Characterization* "}"
		public Group getGroup() { return cGroup; }

		//{Phase}
		public Action getPhaseAction_0() { return cPhaseAction_0; }

		//"Phase"
		public Keyword getPhaseKeyword_1() { return cPhaseKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_4() { return cCharacterizedByAssignment_4; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_4_0() { return cCharacterizedByCharacterizationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class CategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Category");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCategoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCategoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Category:
		//	{Category} "Category" name=ID "{" "}";
		@Override public ParserRule getRule() { return rule; }

		//{Category} "Category" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//{Category}
		public Action getCategoryAction_0() { return cCategoryAction_0; }

		//"Category"
		public Keyword getCategoryKeyword_1() { return cCategoryKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MixinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mixin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMixinAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMixinKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Mixin:
		//	{Mixin} "Mixin" name=ID "{" "}";
		@Override public ParserRule getRule() { return rule; }

		//{Mixin} "Mixin" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//{Mixin}
		public Action getMixinAction_0() { return cMixinAction_0; }

		//"Mixin"
		public Keyword getMixinKeyword_1() { return cMixinKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RoleMixinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RoleMixin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleMixinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//RoleMixin:
		//	"RoleMixin" name=ID "{" "}";
		@Override public ParserRule getRule() { return rule; }

		//"RoleMixin" name=ID "{" "}"
		public Group getGroup() { return cGroup; }

		//"RoleMixin"
		public Keyword getRoleMixinKeyword_0() { return cRoleMixinKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class RelatorUniversalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelatorUniversal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelatorUniversalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCharacterizedByAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_3_0 = (RuleCall)cCharacterizedByAssignment_3.eContents().get(0);
		private final Assignment cMediationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMediationsMediationParserRuleCall_4_0 = (RuleCall)cMediationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *
		// * Example
		// * 
		// * RelatorUniversal Registration {
		// * 	mediates -> Offspring [1..1]
		// * 	mediates -> Parent[1..]
		// * }
		// * 
		// * / RelatorUniversal:
		//	"RelatorUniversal" name=ID "{" characterizedBy+=Characterization* mediations+=Mediation* "}";
		@Override public ParserRule getRule() { return rule; }

		//"RelatorUniversal" name=ID "{" characterizedBy+=Characterization* mediations+=Mediation* "}"
		public Group getGroup() { return cGroup; }

		//"RelatorUniversal"
		public Keyword getRelatorUniversalKeyword_0() { return cRelatorUniversalKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_3() { return cCharacterizedByAssignment_3; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_3_0() { return cCharacterizedByCharacterizationParserRuleCall_3_0; }

		//mediations+=Mediation*
		public Assignment getMediationsAssignment_4() { return cMediationsAssignment_4; }

		//Mediation
		public RuleCall getMediationsMediationParserRuleCall_4_0() { return cMediationsMediationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class BinaryMaterialRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BinaryMaterialRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaterialKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSourceExternallyDependentUniversalCrossReference_2_0 = (CrossReference)cSourceAssignment_2.eContents().get(0);
		private final RuleCall cSourceExternallyDependentUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cSourceExternallyDependentUniversalCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0 = (RuleCall)cSourceLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0 = (RuleCall)cSourceUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDerivedFromAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cDerivedFromRelatorUniversalCrossReference_5_1_0 = (CrossReference)cDerivedFromAssignment_5_1.eContents().get(0);
		private final RuleCall cDerivedFromRelatorUniversalIDTerminalRuleCall_5_1_0_1 = (RuleCall)cDerivedFromRelatorUniversalCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cTargetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTargetExternallyDependentUniversalCrossReference_6_0 = (CrossReference)cTargetAssignment_6.eContents().get(0);
		private final RuleCall cTargetExternallyDependentUniversalIDTerminalRuleCall_6_0_1 = (RuleCall)cTargetExternallyDependentUniversalCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTargetLowerBoundAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTargetLowerBoundCardinalityBoundParserRuleCall_7_1_0 = (RuleCall)cTargetLowerBoundAssignment_7_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cTargetUpperBoundAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cTargetUpperBoundCardinalityUpperBoundParserRuleCall_7_3_0 = (RuleCall)cTargetUpperBoundAssignment_7_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		/// *
		// * Example
		// * 
		// * material rel Parent[1..2] parentOf(Registration) OffSpring[1..*];
		// * / BinaryMaterialRelation:
		//	"material" "rel" source=[ExternallyDependentUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//	sourceUpperBound=CardinalityUpperBound "]")? name=ID ("(" derivedFrom=[RelatorUniversal] ")")?
		//	target=[ExternallyDependentUniversal] ("[" targetLowerBound=CardinalityBound ".."
		//	targetUpperBound=CardinalityUpperBound "]")? ";";
		@Override public ParserRule getRule() { return rule; }

		//"material" "rel" source=[ExternallyDependentUniversal] ("[" sourceLowerBound=CardinalityBound ".."
		//sourceUpperBound=CardinalityUpperBound "]")? name=ID ("(" derivedFrom=[RelatorUniversal] ")")?
		//target=[ExternallyDependentUniversal] ("[" targetLowerBound=CardinalityBound ".."
		//targetUpperBound=CardinalityUpperBound "]")? ";"
		public Group getGroup() { return cGroup; }

		//"material"
		public Keyword getMaterialKeyword_0() { return cMaterialKeyword_0; }

		//"rel"
		public Keyword getRelKeyword_1() { return cRelKeyword_1; }

		//source=[ExternallyDependentUniversal]
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }

		//[ExternallyDependentUniversal]
		public CrossReference getSourceExternallyDependentUniversalCrossReference_2_0() { return cSourceExternallyDependentUniversalCrossReference_2_0; }

		//ID
		public RuleCall getSourceExternallyDependentUniversalIDTerminalRuleCall_2_0_1() { return cSourceExternallyDependentUniversalIDTerminalRuleCall_2_0_1; }

		//("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//sourceLowerBound=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_3_1() { return cSourceLowerBoundAssignment_3_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }

		//sourceUpperBound=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_3_3() { return cSourceUpperBoundAssignment_3_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//("(" derivedFrom=[RelatorUniversal] ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }

		//derivedFrom=[RelatorUniversal]
		public Assignment getDerivedFromAssignment_5_1() { return cDerivedFromAssignment_5_1; }

		//[RelatorUniversal]
		public CrossReference getDerivedFromRelatorUniversalCrossReference_5_1_0() { return cDerivedFromRelatorUniversalCrossReference_5_1_0; }

		//ID
		public RuleCall getDerivedFromRelatorUniversalIDTerminalRuleCall_5_1_0_1() { return cDerivedFromRelatorUniversalIDTerminalRuleCall_5_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5_2() { return cRightParenthesisKeyword_5_2; }

		//target=[ExternallyDependentUniversal]
		public Assignment getTargetAssignment_6() { return cTargetAssignment_6; }

		//[ExternallyDependentUniversal]
		public CrossReference getTargetExternallyDependentUniversalCrossReference_6_0() { return cTargetExternallyDependentUniversalCrossReference_6_0; }

		//ID
		public RuleCall getTargetExternallyDependentUniversalIDTerminalRuleCall_6_0_1() { return cTargetExternallyDependentUniversalIDTerminalRuleCall_6_0_1; }

		//("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_7() { return cGroup_7; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7_0() { return cLeftSquareBracketKeyword_7_0; }

		//targetLowerBound=CardinalityBound
		public Assignment getTargetLowerBoundAssignment_7_1() { return cTargetLowerBoundAssignment_7_1; }

		//CardinalityBound
		public RuleCall getTargetLowerBoundCardinalityBoundParserRuleCall_7_1_0() { return cTargetLowerBoundCardinalityBoundParserRuleCall_7_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_7_2() { return cFullStopFullStopKeyword_7_2; }

		//targetUpperBound=CardinalityUpperBound
		public Assignment getTargetUpperBoundAssignment_7_3() { return cTargetUpperBoundAssignment_7_3; }

		//CardinalityUpperBound
		public RuleCall getTargetUpperBoundCardinalityUpperBoundParserRuleCall_7_3_0() { return cTargetUpperBoundCardinalityUpperBoundParserRuleCall_7_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7_4() { return cRightSquareBracketKeyword_7_4; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class BinaryFormalRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BinaryFormalRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFormalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSourceUniversalCrossReference_2_0 = (CrossReference)cSourceAssignment_2.eContents().get(0);
		private final RuleCall cSourceUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cSourceUniversalCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0 = (RuleCall)cSourceLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0 = (RuleCall)cSourceUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cTargetAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTargetUniversalCrossReference_5_0 = (CrossReference)cTargetAssignment_5.eContents().get(0);
		private final RuleCall cTargetUniversalIDTerminalRuleCall_5_0_1 = (RuleCall)cTargetUniversalCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTargetLowerBoundAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0 = (RuleCall)cTargetLowerBoundAssignment_6_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cTargetUpperBoundAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0 = (RuleCall)cTargetUpperBoundAssignment_6_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		// * Example
		// * 
		// * formal rel Parent[1..2] parentOf OffSpring[1..*];
		// * / BinaryFormalRelation:
		//	"formal" "rel" source=[Universal] ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound
		//	"]")? name=ID target=[Universal] ("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound
		//	"]")? ";";
		@Override public ParserRule getRule() { return rule; }

		//"formal" "rel" source=[Universal] ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound
		//"]")? name=ID target=[Universal] ("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound
		//"]")? ";"
		public Group getGroup() { return cGroup; }

		//"formal"
		public Keyword getFormalKeyword_0() { return cFormalKeyword_0; }

		//"rel"
		public Keyword getRelKeyword_1() { return cRelKeyword_1; }

		//source=[Universal]
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }

		//[Universal]
		public CrossReference getSourceUniversalCrossReference_2_0() { return cSourceUniversalCrossReference_2_0; }

		//ID
		public RuleCall getSourceUniversalIDTerminalRuleCall_2_0_1() { return cSourceUniversalIDTerminalRuleCall_2_0_1; }

		//("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//sourceLowerBound=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_3_1() { return cSourceLowerBoundAssignment_3_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }

		//sourceUpperBound=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_3_3() { return cSourceUpperBoundAssignment_3_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//target=[Universal]
		public Assignment getTargetAssignment_5() { return cTargetAssignment_5; }

		//[Universal]
		public CrossReference getTargetUniversalCrossReference_5_0() { return cTargetUniversalCrossReference_5_0; }

		//ID
		public RuleCall getTargetUniversalIDTerminalRuleCall_5_0_1() { return cTargetUniversalIDTerminalRuleCall_5_0_1; }

		//("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_6() { return cGroup_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }

		//targetLowerBound=CardinalityBound
		public Assignment getTargetLowerBoundAssignment_6_1() { return cTargetLowerBoundAssignment_6_1; }

		//CardinalityBound
		public RuleCall getTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0() { return cTargetLowerBoundCardinalityBoundParserRuleCall_6_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_6_2() { return cFullStopFullStopKeyword_6_2; }

		//targetUpperBound=CardinalityUpperBound
		public Assignment getTargetUpperBoundAssignment_6_3() { return cTargetUpperBoundAssignment_6_3; }

		//CardinalityUpperBound
		public RuleCall getTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0() { return cTargetUpperBoundCardinalityUpperBoundParserRuleCall_6_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_4() { return cRightSquareBracketKeyword_6_4; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class ModeUniversalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModeUniversal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModeUniversalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCharacterizedByAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_3_0 = (RuleCall)cCharacterizedByAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// *
		// * Example
		// * 
		// * ModeUniversal Foo { };
		// * / ModeUniversal:
		//	"ModeUniversal" name=ID "{" characterizedBy+=Characterization* "}";
		@Override public ParserRule getRule() { return rule; }

		//"ModeUniversal" name=ID "{" characterizedBy+=Characterization* "}"
		public Group getGroup() { return cGroup; }

		//"ModeUniversal"
		public Keyword getModeUniversalKeyword_0() { return cModeUniversalKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_3() { return cCharacterizedByAssignment_3; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_3_0() { return cCharacterizedByCharacterizationParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class QualityUniversalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualityUniversal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQualityUniversalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDatatypesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDatatypesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cDatatypesDataTypeCrossReference_3_2_0 = (CrossReference)cDatatypesAssignment_3_2.eContents().get(0);
		private final RuleCall cDatatypesDataTypeIDTerminalRuleCall_3_2_0_1 = (RuleCall)cDatatypesDataTypeCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cDatatypesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cDatatypesDataTypeCrossReference_3_3_1_0 = (CrossReference)cDatatypesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cDatatypesDataTypeIDTerminalRuleCall_3_3_1_0_1 = (RuleCall)cDatatypesDataTypeCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cCharacterizedByAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCharacterizedByCharacterizationParserRuleCall_4_0 = (RuleCall)cCharacterizedByAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *
		// * Example
		// * 
		// * QualityUniversal Foo { };
		// * 
		// * Possible source of confusion:
		// * It must have a characterization with target = self
		// * 
		// * It has to be like ModeUniversal. Allow it to be instantiated without a characterization...
		// * But, it'll generate an error, warning the modeler that it has to characterize something.
		// * / QualityUniversal:
		//	"QualityUniversal" name=ID //characterization = Characterizes
		//	"{" //TODO: review this
		//	("datatypes" "(" datatypes+=[DataType] ("," datatypes+=[DataType])* ")")? characterizedBy+=Characterization* "}";
		@Override public ParserRule getRule() { return rule; }

		//"QualityUniversal" name=ID //characterization = Characterizes
		//"{" //TODO: review this
		//("datatypes" "(" datatypes+=[DataType] ("," datatypes+=[DataType])* ")")? characterizedBy+=Characterization* "}"
		public Group getGroup() { return cGroup; }

		//"QualityUniversal"
		public Keyword getQualityUniversalKeyword_0() { return cQualityUniversalKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		////characterization = Characterizes
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("datatypes" "(" datatypes+=[DataType] ("," datatypes+=[DataType])* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"datatypes"
		public Keyword getDatatypesKeyword_3_0() { return cDatatypesKeyword_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }

		//datatypes+=[DataType]
		public Assignment getDatatypesAssignment_3_2() { return cDatatypesAssignment_3_2; }

		//[DataType]
		public CrossReference getDatatypesDataTypeCrossReference_3_2_0() { return cDatatypesDataTypeCrossReference_3_2_0; }

		//ID
		public RuleCall getDatatypesDataTypeIDTerminalRuleCall_3_2_0_1() { return cDatatypesDataTypeIDTerminalRuleCall_3_2_0_1; }

		//("," datatypes+=[DataType])*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//datatypes+=[DataType]
		public Assignment getDatatypesAssignment_3_3_1() { return cDatatypesAssignment_3_3_1; }

		//[DataType]
		public CrossReference getDatatypesDataTypeCrossReference_3_3_1_0() { return cDatatypesDataTypeCrossReference_3_3_1_0; }

		//ID
		public RuleCall getDatatypesDataTypeIDTerminalRuleCall_3_3_1_0_1() { return cDatatypesDataTypeIDTerminalRuleCall_3_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }

		//characterizedBy+=Characterization*
		public Assignment getCharacterizedByAssignment_4() { return cCharacterizedByAssignment_4; }

		//Characterization
		public RuleCall getCharacterizedByCharacterizationParserRuleCall_4_0() { return cCharacterizedByCharacterizationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class NAryMaterialRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nAryMaterialRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaterialKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAssocKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDerivedFromAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cDerivedFromRelatorUniversalCrossReference_2_0 = (CrossReference)cDerivedFromAssignment_2.eContents().get(0);
		private final RuleCall cDerivedFromRelatorUniversalIDTerminalRuleCall_2_0_1 = (RuleCall)cDerivedFromRelatorUniversalCrossReference_2_0.eContents().get(1);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cTargetRelataAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final CrossReference cTargetRelataExternallyDependentUniversalCrossReference_4_0_0 = (CrossReference)cTargetRelataAssignment_4_0.eContents().get(0);
		private final RuleCall cTargetRelataExternallyDependentUniversalIDTerminalRuleCall_4_0_0_1 = (RuleCall)cTargetRelataExternallyDependentUniversalCrossReference_4_0_0.eContents().get(1);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_4_1_1_0 = (RuleCall)cSourceLowerBoundAssignment_4_1_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_4_1_3_0 = (RuleCall)cSourceUpperBoundAssignment_4_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cTargetRelataAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cTargetRelataExternallyDependentUniversalCrossReference_4_2_1_0 = (CrossReference)cTargetRelataAssignment_4_2_1.eContents().get(0);
		private final RuleCall cTargetRelataExternallyDependentUniversalIDTerminalRuleCall_4_2_1_0_1 = (RuleCall)cTargetRelataExternallyDependentUniversalCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_4_3_1_0 = (RuleCall)cSourceLowerBoundAssignment_4_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_3_2 = (Keyword)cGroup_4_3.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_4_3_3 = (Assignment)cGroup_4_3.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_4_3_3_0 = (RuleCall)cSourceUpperBoundAssignment_4_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_3_4 = (Keyword)cGroup_4_3.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *
		// * Example
		// * 
		// * material assoc Teaching[1..2] happensAt Class[*], Teacher[1..*], Student[1..*];
		// * 
		// * QUESTION: Why does it have multiple source bounds it there is only 1 source (derivedFrom)
		// * / nAryMaterialRelation:
		//	"material" "assoc" derivedFrom=[RelatorUniversal] name=ID (targetRelata+=[ExternallyDependentUniversal] ("["
		//	sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]") (","
		//	targetRelata+=[ExternallyDependentUniversal])* ("[" sourceLowerBound+=CardinalityBound ".."
		//	sourceUpperBound+=CardinalityUpperBound "]"))? ";";
		@Override public ParserRule getRule() { return rule; }

		//"material" "assoc" derivedFrom=[RelatorUniversal] name=ID (targetRelata+=[ExternallyDependentUniversal] ("["
		//sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]") (","
		//targetRelata+=[ExternallyDependentUniversal])* ("[" sourceLowerBound+=CardinalityBound ".."
		//sourceUpperBound+=CardinalityUpperBound "]"))? ";"
		public Group getGroup() { return cGroup; }

		//"material"
		public Keyword getMaterialKeyword_0() { return cMaterialKeyword_0; }

		//"assoc"
		public Keyword getAssocKeyword_1() { return cAssocKeyword_1; }

		//derivedFrom=[RelatorUniversal]
		public Assignment getDerivedFromAssignment_2() { return cDerivedFromAssignment_2; }

		//[RelatorUniversal]
		public CrossReference getDerivedFromRelatorUniversalCrossReference_2_0() { return cDerivedFromRelatorUniversalCrossReference_2_0; }

		//ID
		public RuleCall getDerivedFromRelatorUniversalIDTerminalRuleCall_2_0_1() { return cDerivedFromRelatorUniversalIDTerminalRuleCall_2_0_1; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(targetRelata+=[ExternallyDependentUniversal] ("[" sourceLowerBound+=CardinalityBound ".."
		//sourceUpperBound+=CardinalityUpperBound "]") ("," targetRelata+=[ExternallyDependentUniversal])* ("["
		//sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]"))?
		public Group getGroup_4() { return cGroup_4; }

		//targetRelata+=[ExternallyDependentUniversal]
		public Assignment getTargetRelataAssignment_4_0() { return cTargetRelataAssignment_4_0; }

		//[ExternallyDependentUniversal]
		public CrossReference getTargetRelataExternallyDependentUniversalCrossReference_4_0_0() { return cTargetRelataExternallyDependentUniversalCrossReference_4_0_0; }

		//ID
		public RuleCall getTargetRelataExternallyDependentUniversalIDTerminalRuleCall_4_0_0_1() { return cTargetRelataExternallyDependentUniversalIDTerminalRuleCall_4_0_0_1; }

		//"[" sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]"
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_1_0() { return cLeftSquareBracketKeyword_4_1_0; }

		//sourceLowerBound+=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_4_1_1() { return cSourceLowerBoundAssignment_4_1_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_4_1_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_4_1_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_4_1_2() { return cFullStopFullStopKeyword_4_1_2; }

		//sourceUpperBound+=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_4_1_3() { return cSourceUpperBoundAssignment_4_1_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_4_1_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_4_1_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_1_4() { return cRightSquareBracketKeyword_4_1_4; }

		//("," targetRelata+=[ExternallyDependentUniversal])*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//targetRelata+=[ExternallyDependentUniversal]
		public Assignment getTargetRelataAssignment_4_2_1() { return cTargetRelataAssignment_4_2_1; }

		//[ExternallyDependentUniversal]
		public CrossReference getTargetRelataExternallyDependentUniversalCrossReference_4_2_1_0() { return cTargetRelataExternallyDependentUniversalCrossReference_4_2_1_0; }

		//ID
		public RuleCall getTargetRelataExternallyDependentUniversalIDTerminalRuleCall_4_2_1_0_1() { return cTargetRelataExternallyDependentUniversalIDTerminalRuleCall_4_2_1_0_1; }

		//"[" sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]"
		public Group getGroup_4_3() { return cGroup_4_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_3_0() { return cLeftSquareBracketKeyword_4_3_0; }

		//sourceLowerBound+=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_4_3_1() { return cSourceLowerBoundAssignment_4_3_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_4_3_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_4_3_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_4_3_2() { return cFullStopFullStopKeyword_4_3_2; }

		//sourceUpperBound+=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_4_3_3() { return cSourceUpperBoundAssignment_4_3_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_4_3_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_4_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_3_4() { return cRightSquareBracketKeyword_4_3_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class NAryFormalRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nAryFormalRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFormalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAssocKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cTargetRelataAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cTargetRelataUniversalCrossReference_3_0_0 = (CrossReference)cTargetRelataAssignment_3_0.eContents().get(0);
		private final RuleCall cTargetRelataUniversalIDTerminalRuleCall_3_0_0_1 = (RuleCall)cTargetRelataUniversalCrossReference_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_1_0 = (RuleCall)cSourceLowerBoundAssignment_3_1_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_1_3_0 = (RuleCall)cSourceUpperBoundAssignment_3_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cTargetRelataAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cTargetRelataUniversalCrossReference_3_2_1_0 = (CrossReference)cTargetRelataAssignment_3_2_1.eContents().get(0);
		private final RuleCall cTargetRelataUniversalIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cTargetRelataUniversalCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_3_3_1_0 = (RuleCall)cSourceLowerBoundAssignment_3_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_3_2 = (Keyword)cGroup_3_3.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_3_0 = (RuleCall)cSourceUpperBoundAssignment_3_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_3_4 = (Keyword)cGroup_3_3.eContents().get(4);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		////What is the source/target?
		//nAryFormalRelation:
		//	"formal" "assoc" name=ID (targetRelata+=[Universal] ("[" sourceLowerBound+=CardinalityBound ".."
		//	sourceUpperBound+=CardinalityUpperBound "]") ("," targetRelata+=[Universal])* ("[" sourceLowerBound+=CardinalityBound
		//	".." sourceUpperBound+=CardinalityUpperBound "]"))? ";";
		@Override public ParserRule getRule() { return rule; }

		//"formal" "assoc" name=ID (targetRelata+=[Universal] ("[" sourceLowerBound+=CardinalityBound ".."
		//sourceUpperBound+=CardinalityUpperBound "]") ("," targetRelata+=[Universal])* ("[" sourceLowerBound+=CardinalityBound
		//".." sourceUpperBound+=CardinalityUpperBound "]"))? ";"
		public Group getGroup() { return cGroup; }

		//"formal"
		public Keyword getFormalKeyword_0() { return cFormalKeyword_0; }

		//"assoc"
		public Keyword getAssocKeyword_1() { return cAssocKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//(targetRelata+=[Universal] ("[" sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]")
		//("," targetRelata+=[Universal])* ("[" sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound
		//"]"))?
		public Group getGroup_3() { return cGroup_3; }

		//targetRelata+=[Universal]
		public Assignment getTargetRelataAssignment_3_0() { return cTargetRelataAssignment_3_0; }

		//[Universal]
		public CrossReference getTargetRelataUniversalCrossReference_3_0_0() { return cTargetRelataUniversalCrossReference_3_0_0; }

		//ID
		public RuleCall getTargetRelataUniversalIDTerminalRuleCall_3_0_0_1() { return cTargetRelataUniversalIDTerminalRuleCall_3_0_0_1; }

		//"[" sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]"
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_1_0() { return cLeftSquareBracketKeyword_3_1_0; }

		//sourceLowerBound+=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_3_1_1() { return cSourceLowerBoundAssignment_3_1_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_3_1_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_3_1_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_1_2() { return cFullStopFullStopKeyword_3_1_2; }

		//sourceUpperBound+=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_3_1_3() { return cSourceUpperBoundAssignment_3_1_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_1_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_1_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_1_4() { return cRightSquareBracketKeyword_3_1_4; }

		//("," targetRelata+=[Universal])*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//targetRelata+=[Universal]
		public Assignment getTargetRelataAssignment_3_2_1() { return cTargetRelataAssignment_3_2_1; }

		//[Universal]
		public CrossReference getTargetRelataUniversalCrossReference_3_2_1_0() { return cTargetRelataUniversalCrossReference_3_2_1_0; }

		//ID
		public RuleCall getTargetRelataUniversalIDTerminalRuleCall_3_2_1_0_1() { return cTargetRelataUniversalIDTerminalRuleCall_3_2_1_0_1; }

		//"[" sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]"
		public Group getGroup_3_3() { return cGroup_3_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_3_0() { return cLeftSquareBracketKeyword_3_3_0; }

		//sourceLowerBound+=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_3_3_1() { return cSourceLowerBoundAssignment_3_3_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_3_3_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_3_3_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_3_3_2() { return cFullStopFullStopKeyword_3_3_2; }

		//sourceUpperBound+=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_3_3_3() { return cSourceUpperBoundAssignment_3_3_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_3_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_3_4() { return cRightSquareBracketKeyword_3_3_4; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class CharacterizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Characterization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCharacterizationAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_1_1_0 = (RuleCall)cSourceLowerBoundAssignment_1_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_1_3_0 = (RuleCall)cSourceUpperBoundAssignment_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cCharacterizedByKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTargetAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTargetIntrinsicMomentUniversalCrossReference_3_0 = (CrossReference)cTargetAssignment_3.eContents().get(0);
		private final RuleCall cTargetIntrinsicMomentUniversalIDTerminalRuleCall_3_0_1 = (RuleCall)cTargetIntrinsicMomentUniversalCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetLowerBoundAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTargetLowerBoundCardinalityBoundParserRuleCall_4_1_0 = (RuleCall)cTargetLowerBoundAssignment_4_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cTargetUpperBoundAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cTargetUpperBoundCardinalityUpperBoundParserRuleCall_4_3_0 = (RuleCall)cTargetUpperBoundAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *
		// * Example
		// * 
		// * Role Patient {
		// * 	[1..1] characterizedBy Symptom [1..*]
		// * }
		// * 
		// * Question: Why do an EndurantUniversal owns the Characterization?
		// * This restricts the DSL. The Characterization can only be defined inside an EndurantUniversal definition.  
		// * / Characterization:
		//	{Characterization} ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		//	"characterizedBy" target=[IntrinsicMomentUniversal] ("[" targetLowerBound=CardinalityBound ".."
		//	targetUpperBound=CardinalityUpperBound "]")? ";";
		@Override public ParserRule getRule() { return rule; }

		//{Characterization} ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		//"characterizedBy" target=[IntrinsicMomentUniversal] ("[" targetLowerBound=CardinalityBound ".."
		//targetUpperBound=CardinalityUpperBound "]")? ";"
		public Group getGroup() { return cGroup; }

		//{Characterization}
		public Action getCharacterizationAction_0() { return cCharacterizationAction_0; }

		//("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//sourceLowerBound=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_1_1() { return cSourceLowerBoundAssignment_1_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_1_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_1_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_1_2() { return cFullStopFullStopKeyword_1_2; }

		//sourceUpperBound=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_1_3() { return cSourceUpperBoundAssignment_1_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_1_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_1_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }

		//"characterizedBy"
		public Keyword getCharacterizedByKeyword_2() { return cCharacterizedByKeyword_2; }

		//target=[IntrinsicMomentUniversal]
		public Assignment getTargetAssignment_3() { return cTargetAssignment_3; }

		//[IntrinsicMomentUniversal]
		public CrossReference getTargetIntrinsicMomentUniversalCrossReference_3_0() { return cTargetIntrinsicMomentUniversalCrossReference_3_0; }

		//ID
		public RuleCall getTargetIntrinsicMomentUniversalIDTerminalRuleCall_3_0_1() { return cTargetIntrinsicMomentUniversalIDTerminalRuleCall_3_0_1; }

		//("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_4() { return cGroup_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }

		//targetLowerBound=CardinalityBound
		public Assignment getTargetLowerBoundAssignment_4_1() { return cTargetLowerBoundAssignment_4_1; }

		//CardinalityBound
		public RuleCall getTargetLowerBoundCardinalityBoundParserRuleCall_4_1_0() { return cTargetLowerBoundCardinalityBoundParserRuleCall_4_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_4_2() { return cFullStopFullStopKeyword_4_2; }

		//targetUpperBound=CardinalityUpperBound
		public Assignment getTargetUpperBoundAssignment_4_3() { return cTargetUpperBoundAssignment_4_3; }

		//CardinalityUpperBound
		public RuleCall getTargetUpperBoundCardinalityUpperBoundParserRuleCall_4_3_0() { return cTargetUpperBoundCardinalityUpperBoundParserRuleCall_4_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class MediationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mediation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMediationAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSourceLowerBoundAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSourceLowerBoundCardinalityBoundParserRuleCall_1_1_0 = (RuleCall)cSourceLowerBoundAssignment_1_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cSourceUpperBoundAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cSourceUpperBoundCardinalityUpperBoundParserRuleCall_1_3_0 = (RuleCall)cSourceUpperBoundAssignment_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cMediatesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTargetAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTargetExternallyDependentUniversalCrossReference_3_0 = (CrossReference)cTargetAssignment_3.eContents().get(0);
		private final RuleCall cTargetExternallyDependentUniversalIDTerminalRuleCall_3_0_1 = (RuleCall)cTargetExternallyDependentUniversalCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetLowerBoundAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTargetLowerBoundCardinalityBoundParserRuleCall_4_1_0 = (RuleCall)cTargetLowerBoundAssignment_4_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cTargetUpperBoundAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cTargetUpperBoundCardinalityUpperBoundParserRuleCall_4_3_0 = (RuleCall)cTargetUpperBoundAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		/// *
		// * Example
		// * 
		// * RelatorUniversal Registration {
		// * 	[1..1] mediates Offspring [1..1]
		// * 	[1..1] mediates Parent [1..2]
		// * }
		// * 
		// * / Mediation:
		//	{Mediation} ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")? "mediates"
		//	target=[ExternallyDependentUniversal] ("[" targetLowerBound=CardinalityBound ".."
		//	targetUpperBound=CardinalityUpperBound "]")? ";";
		@Override public ParserRule getRule() { return rule; }

		//{Mediation} ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")? "mediates"
		//target=[ExternallyDependentUniversal] ("[" targetLowerBound=CardinalityBound ".."
		//targetUpperBound=CardinalityUpperBound "]")? ";"
		public Group getGroup() { return cGroup; }

		//{Mediation}
		public Action getMediationAction_0() { return cMediationAction_0; }

		//("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//sourceLowerBound=CardinalityBound
		public Assignment getSourceLowerBoundAssignment_1_1() { return cSourceLowerBoundAssignment_1_1; }

		//CardinalityBound
		public RuleCall getSourceLowerBoundCardinalityBoundParserRuleCall_1_1_0() { return cSourceLowerBoundCardinalityBoundParserRuleCall_1_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_1_2() { return cFullStopFullStopKeyword_1_2; }

		//sourceUpperBound=CardinalityUpperBound
		public Assignment getSourceUpperBoundAssignment_1_3() { return cSourceUpperBoundAssignment_1_3; }

		//CardinalityUpperBound
		public RuleCall getSourceUpperBoundCardinalityUpperBoundParserRuleCall_1_3_0() { return cSourceUpperBoundCardinalityUpperBoundParserRuleCall_1_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }

		//"mediates"
		public Keyword getMediatesKeyword_2() { return cMediatesKeyword_2; }

		//target=[ExternallyDependentUniversal]
		public Assignment getTargetAssignment_3() { return cTargetAssignment_3; }

		//[ExternallyDependentUniversal]
		public CrossReference getTargetExternallyDependentUniversalCrossReference_3_0() { return cTargetExternallyDependentUniversalCrossReference_3_0; }

		//ID
		public RuleCall getTargetExternallyDependentUniversalIDTerminalRuleCall_3_0_1() { return cTargetExternallyDependentUniversalIDTerminalRuleCall_3_0_1; }

		//("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")?
		public Group getGroup_4() { return cGroup_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }

		//targetLowerBound=CardinalityBound
		public Assignment getTargetLowerBoundAssignment_4_1() { return cTargetLowerBoundAssignment_4_1; }

		//CardinalityBound
		public RuleCall getTargetLowerBoundCardinalityBoundParserRuleCall_4_1_0() { return cTargetLowerBoundCardinalityBoundParserRuleCall_4_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_4_2() { return cFullStopFullStopKeyword_4_2; }

		//targetUpperBound=CardinalityUpperBound
		public Assignment getTargetUpperBoundAssignment_4_3() { return cTargetUpperBoundAssignment_4_3; }

		//CardinalityUpperBound
		public RuleCall getTargetUpperBoundCardinalityUpperBoundParserRuleCall_4_3_0() { return cTargetUpperBoundCardinalityUpperBoundParserRuleCall_4_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class PrimitiveDataTypeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveDataTypeType");
		private final Keyword cPrimitiveDataTypeTypeKeyword = (Keyword)rule.eContents().get(1);
		
		/// * TODO: implement this rule and an appropriate IValueConverter * / PrimitiveDataTypeType:
		//	"PrimitiveDataTypeType";
		@Override public ParserRule getRule() { return rule; }

		//"PrimitiveDataTypeType"
		public Keyword getPrimitiveDataTypeTypeKeyword() { return cPrimitiveDataTypeTypeKeyword; }
	}

	public class DataTypeAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataTypeAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsOfTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cIsOfTypeDataTypeCrossReference_0_0 = (CrossReference)cIsOfTypeAssignment_0.eContents().get(0);
		private final RuleCall cIsOfTypeDataTypeIDTerminalRuleCall_0_0_1 = (RuleCall)cIsOfTypeDataTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//DataTypeAttribute:
		//	isOfType=[DataType] name=ID;
		@Override public ParserRule getRule() { return rule; }

		//isOfType=[DataType] name=ID
		public Group getGroup() { return cGroup; }

		//isOfType=[DataType]
		public Assignment getIsOfTypeAssignment_0() { return cIsOfTypeAssignment_0; }

		//[DataType]
		public CrossReference getIsOfTypeDataTypeCrossReference_0_0() { return cIsOfTypeDataTypeCrossReference_0_0; }

		//ID
		public RuleCall getIsOfTypeDataTypeIDTerminalRuleCall_0_0_1() { return cIsOfTypeDataTypeIDTerminalRuleCall_0_0_1; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		@Override public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class CardinalityUpperBoundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CardinalityUpperBound");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCardinalityBoundParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//CardinalityUpperBound returns ecore::EInt:
		//	CardinalityBound | "*";
		@Override public ParserRule getRule() { return rule; }

		//CardinalityBound | "*"
		public Alternatives getAlternatives() { return cAlternatives; }

		//CardinalityBound
		public RuleCall getCardinalityBoundParserRuleCall_0() { return cCardinalityBoundParserRuleCall_0; }

		//"*"
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
	}

	public class CardinalityBoundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CardinalityBound");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//CardinalityBound returns ecore::EInt:
		//	INT;
		@Override public ParserRule getRule() { return rule; }

		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}
	
	
	private final ModelElements pModel;
	private final PackageableElementElements pPackageableElement;
	private final EndurantUniversalElements pEndurantUniversal;
	private final UniversalElements pUniversal;
	private final DataTypeElements pDataType;
	private final IntrinsicMomentUniversalElements pIntrinsicMomentUniversal;
	private final PackageElements pPackage;
	private final GeneralizationSetElements pGeneralizationSet;
	private final CompleteGeneralizationSetElements pCompleteGeneralizationSet;
	private final AnonymousGeneralizationSetElements pAnonymousGeneralizationSet;
	private final SingleAnonymousGeneralizationSetElements pSingleAnonymousGeneralizationSet;
	private final MultipleAnonymousGeneralizationSetElements pMultipleAnonymousGeneralizationSet;
	private final PrimitiveDataTypeElements pPrimitiveDataType;
	private final ComplexDataTypeElements pComplexDataType;
	private final EnumerationElements pEnumeration;
	private final MeronymicRelationElements pMeronymicRelation;
	private final ComponentOfRelationElements pComponentOfRelation;
	private final MembershipRelationElements pMembershipRelation;
	private final SubCollectionRelationElements pSubCollectionRelation;
	private final SubQuantityRelationElements pSubQuantityRelation;
	private final KindElements pKind;
	private final QuantityUniversalElements pQuantityUniversal;
	private final CollectiveUniversalElements pCollectiveUniversal;
	private final SubKindElements pSubKind;
	private final RoleElements pRole;
	private final PhaseElements pPhase;
	private final CategoryElements pCategory;
	private final MixinElements pMixin;
	private final RoleMixinElements pRoleMixin;
	private final RelatorUniversalElements pRelatorUniversal;
	private final BinaryMaterialRelationElements pBinaryMaterialRelation;
	private final BinaryFormalRelationElements pBinaryFormalRelation;
	private final ModeUniversalElements pModeUniversal;
	private final QualityUniversalElements pQualityUniversal;
	private final NAryMaterialRelationElements pNAryMaterialRelation;
	private final NAryFormalRelationElements pNAryFormalRelation;
	private final CharacterizationElements pCharacterization;
	private final MediationElements pMediation;
	private final EStringElements pEString;
	private final PrimitiveDataTypeTypeElements pPrimitiveDataTypeType;
	private final DataTypeAttributeElements pDataTypeAttribute;
	private final EIntElements pEInt;
	private final CardinalityUpperBoundElements pCardinalityUpperBound;
	private final CardinalityBoundElements pCardinalityBound;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pPackageableElement = new PackageableElementElements();
		this.pEndurantUniversal = new EndurantUniversalElements();
		this.pUniversal = new UniversalElements();
		this.pDataType = new DataTypeElements();
		this.pIntrinsicMomentUniversal = new IntrinsicMomentUniversalElements();
		this.pPackage = new PackageElements();
		this.pGeneralizationSet = new GeneralizationSetElements();
		this.pCompleteGeneralizationSet = new CompleteGeneralizationSetElements();
		this.pAnonymousGeneralizationSet = new AnonymousGeneralizationSetElements();
		this.pSingleAnonymousGeneralizationSet = new SingleAnonymousGeneralizationSetElements();
		this.pMultipleAnonymousGeneralizationSet = new MultipleAnonymousGeneralizationSetElements();
		this.pPrimitiveDataType = new PrimitiveDataTypeElements();
		this.pComplexDataType = new ComplexDataTypeElements();
		this.pEnumeration = new EnumerationElements();
		this.pMeronymicRelation = new MeronymicRelationElements();
		this.pComponentOfRelation = new ComponentOfRelationElements();
		this.pMembershipRelation = new MembershipRelationElements();
		this.pSubCollectionRelation = new SubCollectionRelationElements();
		this.pSubQuantityRelation = new SubQuantityRelationElements();
		this.pKind = new KindElements();
		this.pQuantityUniversal = new QuantityUniversalElements();
		this.pCollectiveUniversal = new CollectiveUniversalElements();
		this.pSubKind = new SubKindElements();
		this.pRole = new RoleElements();
		this.pPhase = new PhaseElements();
		this.pCategory = new CategoryElements();
		this.pMixin = new MixinElements();
		this.pRoleMixin = new RoleMixinElements();
		this.pRelatorUniversal = new RelatorUniversalElements();
		this.pBinaryMaterialRelation = new BinaryMaterialRelationElements();
		this.pBinaryFormalRelation = new BinaryFormalRelationElements();
		this.pModeUniversal = new ModeUniversalElements();
		this.pQualityUniversal = new QualityUniversalElements();
		this.pNAryMaterialRelation = new NAryMaterialRelationElements();
		this.pNAryFormalRelation = new NAryFormalRelationElements();
		this.pCharacterization = new CharacterizationElements();
		this.pMediation = new MediationElements();
		this.pEString = new EStringElements();
		this.pPrimitiveDataTypeType = new PrimitiveDataTypeTypeElements();
		this.pDataTypeAttribute = new DataTypeAttributeElements();
		this.pEInt = new EIntElements();
		this.pCardinalityUpperBound = new CardinalityUpperBoundElements();
		this.pCardinalityBound = new CardinalityBoundElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.ufes.inf.nemo.ontouml.ontoumlprime.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	{Model} elements+=PackageableElement*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//PackageableElement:
	//	Package | GeneralizationSet | PrimitiveDataType | ComplexDataType | Enumeration | MeronymicRelation | Kind |
	//	QuantityUniversal | CollectiveUniversal | SubKind | Role | Phase | Category | Mixin | RoleMixin | RelatorUniversal |
	//	BinaryMaterialRelation | BinaryFormalRelation | ModeUniversal | QualityUniversal | nAryMaterialRelation |
	//	nAryFormalRelation;
	public PackageableElementElements getPackageableElementAccess() {
		return pPackageableElement;
	}
	
	public ParserRule getPackageableElementRule() {
		return getPackageableElementAccess().getRule();
	}

	//EndurantUniversal:
	//	ModeUniversal | QualityUniversal | RelatorUniversal | Phase | Role | SubKind | Kind | CollectiveUniversal |
	//	QuantityUniversal;
	public EndurantUniversalElements getEndurantUniversalAccess() {
		return pEndurantUniversal;
	}
	
	public ParserRule getEndurantUniversalRule() {
		return getEndurantUniversalAccess().getRule();
	}

	//Universal:
	//	Kind | QuantityUniversal | CollectiveUniversal | SubKind | Role | Phase | Category | Mixin | RoleMixin |
	//	RelatorUniversal | ModeUniversal | QualityUniversal;
	public UniversalElements getUniversalAccess() {
		return pUniversal;
	}
	
	public ParserRule getUniversalRule() {
		return getUniversalAccess().getRule();
	}

	//DataType:
	//	PrimitiveDataType | ComplexDataType | Enumeration;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}

	//// Only to scope solving
	//IntrinsicMomentUniversal:
	//	ModeUniversal | QualityUniversal;
	public IntrinsicMomentUniversalElements getIntrinsicMomentUniversalAccess() {
		return pIntrinsicMomentUniversal;
	}
	
	public ParserRule getIntrinsicMomentUniversalRule() {
		return getIntrinsicMomentUniversalAccess().getRule();
	}

	//Package:
	//	{Package} "package" name=ID "{" elements+=PackageableElement+ "}";
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}

	/// *
	// * complete generalizationSet gender specializes Person into Man, Woman
	// * => GeographicalSpace specializes SpatialThing
	// * => GeographicalSpace, FooBar specialize SpatialThing
	// * => GeographicalSpace specializationOf SpatialThing
	// * GeographicalSpace => SpatialThing
	// * GeographicalSpace, MultiDimensionalSpace => SpatialThing
	// * / GeneralizationSet:
	//	CompleteGeneralizationSet | AnonymousGeneralizationSet;
	public GeneralizationSetElements getGeneralizationSetAccess() {
		return pGeneralizationSet;
	}
	
	public ParserRule getGeneralizationSetRule() {
		return getGeneralizationSetAccess().getRule();
	}

	//CompleteGeneralizationSet returns GeneralizationSet:
	//	isCovering?="complete"? "GeneralizationSet" name=ID "specializes" specializedUniversal=[Universal] "into"
	//	specializingUniversals+=[Universal] ("," specializingUniversals+=[Universal])* ";";
	public CompleteGeneralizationSetElements getCompleteGeneralizationSetAccess() {
		return pCompleteGeneralizationSet;
	}
	
	public ParserRule getCompleteGeneralizationSetRule() {
		return getCompleteGeneralizationSetAccess().getRule();
	}

	//AnonymousGeneralizationSet returns GeneralizationSet:
	//	specializingUniversals+=[Universal] (("," specializingUniversals+=[Universal])+ ("specialize" | "=>") | ("specializes"
	//	| "=>")) specializedUniversal=[Universal] ";";
	public AnonymousGeneralizationSetElements getAnonymousGeneralizationSetAccess() {
		return pAnonymousGeneralizationSet;
	}
	
	public ParserRule getAnonymousGeneralizationSetRule() {
		return getAnonymousGeneralizationSetAccess().getRule();
	}

	//SingleAnonymousGeneralizationSet returns GeneralizationSet:
	//	specializingUniversals+=[Universal] ("specializes" | "=>") specializedUniversal=[Universal] ";";
	public SingleAnonymousGeneralizationSetElements getSingleAnonymousGeneralizationSetAccess() {
		return pSingleAnonymousGeneralizationSet;
	}
	
	public ParserRule getSingleAnonymousGeneralizationSetRule() {
		return getSingleAnonymousGeneralizationSetAccess().getRule();
	}

	//MultipleAnonymousGeneralizationSet returns GeneralizationSet:
	//	specializingUniversals+=[Universal] ("," specializingUniversals+=[Universal])+ ("specialize" | "=>")
	//	specializedUniversal=[Universal] ";";
	public MultipleAnonymousGeneralizationSetElements getMultipleAnonymousGeneralizationSetAccess() {
		return pMultipleAnonymousGeneralizationSet;
	}
	
	public ParserRule getMultipleAnonymousGeneralizationSetRule() {
		return getMultipleAnonymousGeneralizationSetAccess().getRule();
	}

	//PrimitiveDataType:
	//	"PrimitiveDataType" name=ID "(" _type=PrimitiveDataTypeType ")" ";";
	public PrimitiveDataTypeElements getPrimitiveDataTypeAccess() {
		return pPrimitiveDataType;
	}
	
	public ParserRule getPrimitiveDataTypeRule() {
		return getPrimitiveDataTypeAccess().getRule();
	}

	//ComplexDataType:
	//	"ComplexDataType" name=ID "{" attributes+=DataTypeAttribute (";" attributes+=DataTypeAttribute)* "}";
	public ComplexDataTypeElements getComplexDataTypeAccess() {
		return pComplexDataType;
	}
	
	public ParserRule getComplexDataTypeRule() {
		return getComplexDataTypeAccess().getRule();
	}

	//Enumeration:
	//	"enum" name=ID "{" enumerationLiterals+=EString ("," enumerationLiterals+=EString)* "}";
	public EnumerationElements getEnumerationAccess() {
		return pEnumeration;
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}

	//MeronymicRelation:
	//	ComponentOfRelation | MembershipRelation | SubCollectionRelation | SubQuantityRelation;
	public MeronymicRelationElements getMeronymicRelationAccess() {
		return pMeronymicRelation;
	}
	
	public ParserRule getMeronymicRelationRule() {
		return getMeronymicRelationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * Foo [1..1] isComponentOf Bar [1..1]; 
	// * / ComponentOfRelation:
	//	(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
	//	partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
	//	sourceUpperBound=CardinalityUpperBound "]")? "isComponentOf" whole=[SubstantialUniversal] ("["
	//	targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";";
	public ComponentOfRelationElements getComponentOfRelationAccess() {
		return pComponentOfRelation;
	}
	
	public ParserRule getComponentOfRelationRule() {
		return getComponentOfRelationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * Foo [1..1] isMemberOf Bar [1..1]; 
	// * / MembershipRelation:
	//	(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
	//	partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
	//	sourceUpperBound=CardinalityUpperBound "]")? "isMemberOf" whole=[SubstantialUniversal] ("["
	//	targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";";
	public MembershipRelationElements getMembershipRelationAccess() {
		return pMembershipRelation;
	}
	
	public ParserRule getMembershipRelationRule() {
		return getMembershipRelationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * Foo [1..1] isSubcollectionOf Bar [1..1];
	// * 
	// * GUIZZARDI, pg. 351 
	// * / SubCollectionRelation:
	//	(partIsEssential?="essential"? partIsInseparable?="inseparable"? partIsShareable?="shareable"?
	//	partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
	//	sourceUpperBound=CardinalityUpperBound "]")? "isSubCollectionOf" whole=[SubstantialUniversal] ("["
	//	targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";";
	public SubCollectionRelationElements getSubCollectionRelationAccess() {
		return pSubCollectionRelation;
	}
	
	public ParserRule getSubCollectionRelationRule() {
		return getSubCollectionRelationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * Foo [1..1] isComponentOf Bar [1..1];
	// * 
	// * GUIZZARDI, pg. 350 
	// * / SubQuantityRelation:
	//	(partIsEssential?="essential"? partIsInseparable?="inseparable"? // Is always false
	//	// partIsShareable?='shareable' & 
	//	partIsImmutable?="immutable"?) "relation" part=[SubstantialUniversal] ("[" sourceLowerBound=CardinalityBound ".."
	//	sourceUpperBound=CardinalityUpperBound "]")? "isSubQuantityOf" whole=[SubstantialUniversal] ("["
	//	targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound "]")? ";";
	public SubQuantityRelationElements getSubQuantityRelationAccess() {
		return pSubQuantityRelation;
	}
	
	public ParserRule getSubQuantityRelationRule() {
		return getSubQuantityRelationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * Kind Foo {
	// * 
	// * }
	// * / Kind:
	//	{Kind} "Kind" name=ID "{" characterizedBy+=Characterization* "}";
	public KindElements getKindAccess() {
		return pKind;
	}
	
	public ParserRule getKindRule() {
		return getKindAccess().getRule();
	}

	//QuantityUniversal:
	//	{QuantityUniversal} "Quantity" name=ID "{" characterizedBy+=Characterization* "}";
	public QuantityUniversalElements getQuantityUniversalAccess() {
		return pQuantityUniversal;
	}
	
	public ParserRule getQuantityUniversalRule() {
		return getQuantityUniversalAccess().getRule();
	}

	//CollectiveUniversal:
	//	isExtensional?="extensional"? "CollectiveUniversal" name=ID "{" characterizedBy+=Characterization* "}";
	public CollectiveUniversalElements getCollectiveUniversalAccess() {
		return pCollectiveUniversal;
	}
	
	public ParserRule getCollectiveUniversalRule() {
		return getCollectiveUniversalAccess().getRule();
	}

	//SubKind:
	//	{SubKind} "SubKind" name=ID "{" characterizedBy+=Characterization* "}";
	public SubKindElements getSubKindAccess() {
		return pSubKind;
	}
	
	public ParserRule getSubKindRule() {
		return getSubKindAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * 
	// * / Role:
	//	"Role" name=ID "{" characterizedBy+=Characterization* "}";
	public RoleElements getRoleAccess() {
		return pRole;
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}

	//Phase:
	//	{Phase} "Phase" name=ID "{" characterizedBy+=Characterization* "}";
	public PhaseElements getPhaseAccess() {
		return pPhase;
	}
	
	public ParserRule getPhaseRule() {
		return getPhaseAccess().getRule();
	}

	//Category:
	//	{Category} "Category" name=ID "{" "}";
	public CategoryElements getCategoryAccess() {
		return pCategory;
	}
	
	public ParserRule getCategoryRule() {
		return getCategoryAccess().getRule();
	}

	//Mixin:
	//	{Mixin} "Mixin" name=ID "{" "}";
	public MixinElements getMixinAccess() {
		return pMixin;
	}
	
	public ParserRule getMixinRule() {
		return getMixinAccess().getRule();
	}

	//RoleMixin:
	//	"RoleMixin" name=ID "{" "}";
	public RoleMixinElements getRoleMixinAccess() {
		return pRoleMixin;
	}
	
	public ParserRule getRoleMixinRule() {
		return getRoleMixinAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * RelatorUniversal Registration {
	// * 	mediates -> Offspring [1..1]
	// * 	mediates -> Parent[1..]
	// * }
	// * 
	// * / RelatorUniversal:
	//	"RelatorUniversal" name=ID "{" characterizedBy+=Characterization* mediations+=Mediation* "}";
	public RelatorUniversalElements getRelatorUniversalAccess() {
		return pRelatorUniversal;
	}
	
	public ParserRule getRelatorUniversalRule() {
		return getRelatorUniversalAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * material rel Parent[1..2] parentOf(Registration) OffSpring[1..*];
	// * / BinaryMaterialRelation:
	//	"material" "rel" source=[ExternallyDependentUniversal] ("[" sourceLowerBound=CardinalityBound ".."
	//	sourceUpperBound=CardinalityUpperBound "]")? name=ID ("(" derivedFrom=[RelatorUniversal] ")")?
	//	target=[ExternallyDependentUniversal] ("[" targetLowerBound=CardinalityBound ".."
	//	targetUpperBound=CardinalityUpperBound "]")? ";";
	public BinaryMaterialRelationElements getBinaryMaterialRelationAccess() {
		return pBinaryMaterialRelation;
	}
	
	public ParserRule getBinaryMaterialRelationRule() {
		return getBinaryMaterialRelationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * formal rel Parent[1..2] parentOf OffSpring[1..*];
	// * / BinaryFormalRelation:
	//	"formal" "rel" source=[Universal] ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound
	//	"]")? name=ID target=[Universal] ("[" targetLowerBound=CardinalityBound ".." targetUpperBound=CardinalityUpperBound
	//	"]")? ";";
	public BinaryFormalRelationElements getBinaryFormalRelationAccess() {
		return pBinaryFormalRelation;
	}
	
	public ParserRule getBinaryFormalRelationRule() {
		return getBinaryFormalRelationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * ModeUniversal Foo { };
	// * / ModeUniversal:
	//	"ModeUniversal" name=ID "{" characterizedBy+=Characterization* "}";
	public ModeUniversalElements getModeUniversalAccess() {
		return pModeUniversal;
	}
	
	public ParserRule getModeUniversalRule() {
		return getModeUniversalAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * QualityUniversal Foo { };
	// * 
	// * Possible source of confusion:
	// * It must have a characterization with target = self
	// * 
	// * It has to be like ModeUniversal. Allow it to be instantiated without a characterization...
	// * But, it'll generate an error, warning the modeler that it has to characterize something.
	// * / QualityUniversal:
	//	"QualityUniversal" name=ID //characterization = Characterizes
	//	"{" //TODO: review this
	//	("datatypes" "(" datatypes+=[DataType] ("," datatypes+=[DataType])* ")")? characterizedBy+=Characterization* "}";
	public QualityUniversalElements getQualityUniversalAccess() {
		return pQualityUniversal;
	}
	
	public ParserRule getQualityUniversalRule() {
		return getQualityUniversalAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * material assoc Teaching[1..2] happensAt Class[*], Teacher[1..*], Student[1..*];
	// * 
	// * QUESTION: Why does it have multiple source bounds it there is only 1 source (derivedFrom)
	// * / nAryMaterialRelation:
	//	"material" "assoc" derivedFrom=[RelatorUniversal] name=ID (targetRelata+=[ExternallyDependentUniversal] ("["
	//	sourceLowerBound+=CardinalityBound ".." sourceUpperBound+=CardinalityUpperBound "]") (","
	//	targetRelata+=[ExternallyDependentUniversal])* ("[" sourceLowerBound+=CardinalityBound ".."
	//	sourceUpperBound+=CardinalityUpperBound "]"))? ";";
	public NAryMaterialRelationElements getNAryMaterialRelationAccess() {
		return pNAryMaterialRelation;
	}
	
	public ParserRule getNAryMaterialRelationRule() {
		return getNAryMaterialRelationAccess().getRule();
	}

	////What is the source/target?
	//nAryFormalRelation:
	//	"formal" "assoc" name=ID (targetRelata+=[Universal] ("[" sourceLowerBound+=CardinalityBound ".."
	//	sourceUpperBound+=CardinalityUpperBound "]") ("," targetRelata+=[Universal])* ("[" sourceLowerBound+=CardinalityBound
	//	".." sourceUpperBound+=CardinalityUpperBound "]"))? ";";
	public NAryFormalRelationElements getNAryFormalRelationAccess() {
		return pNAryFormalRelation;
	}
	
	public ParserRule getNAryFormalRelationRule() {
		return getNAryFormalRelationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * Role Patient {
	// * 	[1..1] characterizedBy Symptom [1..*]
	// * }
	// * 
	// * Question: Why do an EndurantUniversal owns the Characterization?
	// * This restricts the DSL. The Characterization can only be defined inside an EndurantUniversal definition.  
	// * / Characterization:
	//	{Characterization} ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")?
	//	"characterizedBy" target=[IntrinsicMomentUniversal] ("[" targetLowerBound=CardinalityBound ".."
	//	targetUpperBound=CardinalityUpperBound "]")? ";";
	public CharacterizationElements getCharacterizationAccess() {
		return pCharacterization;
	}
	
	public ParserRule getCharacterizationRule() {
		return getCharacterizationAccess().getRule();
	}

	/// *
	// * Example
	// * 
	// * RelatorUniversal Registration {
	// * 	[1..1] mediates Offspring [1..1]
	// * 	[1..1] mediates Parent [1..2]
	// * }
	// * 
	// * / Mediation:
	//	{Mediation} ("[" sourceLowerBound=CardinalityBound ".." sourceUpperBound=CardinalityUpperBound "]")? "mediates"
	//	target=[ExternallyDependentUniversal] ("[" targetLowerBound=CardinalityBound ".."
	//	targetUpperBound=CardinalityUpperBound "]")? ";";
	public MediationElements getMediationAccess() {
		return pMediation;
	}
	
	public ParserRule getMediationRule() {
		return getMediationAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	/// * TODO: implement this rule and an appropriate IValueConverter * / PrimitiveDataTypeType:
	//	"PrimitiveDataTypeType";
	public PrimitiveDataTypeTypeElements getPrimitiveDataTypeTypeAccess() {
		return pPrimitiveDataTypeType;
	}
	
	public ParserRule getPrimitiveDataTypeTypeRule() {
		return getPrimitiveDataTypeTypeAccess().getRule();
	}

	//DataTypeAttribute:
	//	isOfType=[DataType] name=ID;
	public DataTypeAttributeElements getDataTypeAttributeAccess() {
		return pDataTypeAttribute;
	}
	
	public ParserRule getDataTypeAttributeRule() {
		return getDataTypeAttributeAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//CardinalityUpperBound returns ecore::EInt:
	//	CardinalityBound | "*";
	public CardinalityUpperBoundElements getCardinalityUpperBoundAccess() {
		return pCardinalityUpperBound;
	}
	
	public ParserRule getCardinalityUpperBoundRule() {
		return getCardinalityUpperBoundAccess().getRule();
	}

	//CardinalityBound returns ecore::EInt:
	//	INT;
	public CardinalityBoundElements getCardinalityBoundAccess() {
		return pCardinalityBound;
	}
	
	public ParserRule getCardinalityBoundRule() {
		return getCardinalityBoundAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
